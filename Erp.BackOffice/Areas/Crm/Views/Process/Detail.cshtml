@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Crm.Models

@model ProcessViewModel

@{
    ViewBag.Title = Wording.PageDetail_Process;

    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Process",
        ActionName = "Detail",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = false
    };
}

@section HeadOfPage {
    @if (Model.Category == "workflow")
    {
        <style type="text/css">
            .modal-dialog {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 5%;
            }

            .modal-content {
                height: 100%;
                min-height: 100%;
                border-radius: 0;
            }

            .modal-body {
                height: 100% !important;
            }
        </style>
    }
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
<div class="detail-view">
    <div class="row control-group">
        <div class="col-sm-6">@Html.DetailViewItemFor2(model => model.Name)</div>
        <div class="col-sm-6">@Html.DetailViewItemFor2(model => model.Category)</div>
    </div>
    <div class="row control-group">
        <div class="col-sm-6">@Html.DetailViewItemFor2(model => model.DataSource)</div>
        <div class="col-sm-6">@Html.DetailViewItemFor2(model => model.IsActive)</div>
    </div>
    @if (Model.Category == "workflow")
    {
        @*<div class="row control-group">@Html.DetailViewItemFor2(model => model.RecordIsCreated)</div>
            <div class="row control-group">@Html.DetailViewItemFor2(model => model.RecordIsAssigned)</div>
            <div class="row control-group">@Html.DetailViewItemFor2(model => model.RecordFieldsChanges)</div>
            <div class="row control-group">@Html.DetailViewItemFor2(model => model.RecordIsDeleted)</div>*@
    }

</div>
@using (Html.BeginButtonContainer(pageSetting))
{
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Edit", "Process", "Crm"))
    {
        @Html.Button(Wording.Edit, ButtonType.aTag, ButtonColor.Info, ButtonSize.Mini, true, IconType.Edit, IconSize.Default, false, new { @href = Url.Action("Edit", "Process", new { Id = Model.Id }) })
    }
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Detail", "Process", "Crm"))
    {
        @Html.Button("Test", ButtonType.aTag, ButtonColor.Success, ButtonSize.Mini, true, IconType.Ok, IconSize.Default, false, new { @href = Url.Action("Detail", "Process", new { Id = Model.Id, Test = true }) })
    }
}
<p></p>

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

@if (Model.Category == "workflow")
{
    Html.RenderAction("SubList_ProcessAction", "Process", new { ProcessId = Model.Id });
}
else
{
    Html.RenderAction("Index", "ProcessStage", new { ProcessId = Model.Id, ProcessEntity = Model.DataSource });
}

@section Scripts {
    <script type="text/javascript">
        function CheckIsval() {
            if ($('[name="DeleteAll-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }
        })
    </script>
}