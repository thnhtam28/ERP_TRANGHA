@model Erp.BackOffice.Administration.Models.ActionReportViewModel

@using Erp.BackOffice.Helpers

@{
    ViewBag.Title = "Tạo file report";
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Module",
        ActionName = "CreateReport",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @Html.Raw(ViewBag.AlertMessage)
    </div>
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "CreateReport", "Module", new { @area = "Administration" }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @*@Html.Button(Resources.Wording.Save, ButtonType.buttonTag, ButtonColor.Info, ButtonSize.Default, true, IconType.Ok, IconSize.Default, false, null)*@
    <div class="row">
        <div class="col-sm-8">
            <div class="clearfix table-responsive">
                <table class="table table-striped grid-table" style="width:auto">
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Tên tiếng việt</td>
                            <td>DataType</td>
                            <td>Cột tìm kiếm</td>
                            <td>Cột hiển thị</td>
                            <td>#</td>
                        </tr>
                    </thead>
                    <tbody id="list_column_data">
                        @for (int i = 0; i <= 30; i++)
                        {
                            <tr>
                                <td>@Html.TextBox("ListColumns[" + i + "].Name", null)</td>
                                <td>@Html.TextBox("ListColumns[" + i + "].Label", null)</td>
                                <td>
                                    <select id="ListColumns_@(i)__Type" name="ListColumns[@i].Type">
                                        <option value="">- Chọn -</option>
                                        <option value="string">string</option>
                                        <option value="bool">bool</option>
                                        <option value="DateTime">DateTime</option>
                                        <option value="int">int</option>
                                        <option value="float">float</option>
                                        <option value="decimal">decimal</option>
                                    </select>
                                </td>
                                <td>
                                    <label class="checkbox" onclick="clickActive_Search(this, @i)" ><input type="checkbox" class="ace" name="ListColumns[@(i)].IsSearch" id="ListColumns_@(i)__IsSearch" /> <span class="lbl"></span></label>
                                </td>
                                <td>
                                    <label class="checkbox" onclick="clickActive_Table(this, @i)"><input type="checkbox" class="ace" name="ListColumns[@(i)].IsTable" id="ListColumns_@(i)__IsTable" /> <span class="lbl"></span></label>
                                </td>
                                <td>
                                    <a class="btn btn-xs btn-danger" onclick="removeColumnData(this)">X</a>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
                <div class="clearfix">
                    <a class="btn btn-primary" onclick="addColumnData()">Thêm cột</a>
                    @*<a class="btn btn-primary" onclick="createViewModel()">Create view model</a>*@
                </div>
            </div>
            <p></p>
            @*<textarea id="output_html_form" style="width:100%; height:400px"></textarea>*@
        </div>

        <div class="col-sm-4">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.SourceFolder)
            @Html.HiddenFor(m => m.AppName)
            @Html.HiddenFor(m => m.Name)

            @Html.CustomTextboxFor(m => m.ModuleName, null, null, WidthType.span4, true)
            @*@Html.CustomTextboxFor(m => m.ModuleLabel, null, null, WidthType.span4, true)*@
            @Html.CustomTextboxFor(m => m.AreaName, null, null, WidthType.span4, true)
            @Html.CustomTextboxFor(m => m.ActionLabel, null, null, WidthType.span4, true)
            @Html.CustomTextboxFor(m => m.ActionName, null, null, WidthType.span4, true)

            @*<div id="" class="control-group form-group ">
                    <label class="control-label no-padding-right col-sm-3" for="TableName">Table alrealy exits</label>
                    <div class="control-value col-sm-9">
                        <div class="clearfix">
                            <input class="col-sm-4" id="TableName" name="TableName" placeholder="Enter table name" type="text" value="">
                        </div>
                        <div class="clearfix">
                            <span class="field-validation-valid help-inline" data-valmsg-for="TableName" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                </div>*@

            @*@Html.CustomSwitchesFor(m => m.IsViewEntity, SwitchesStyle.CheckboxStyle, true, WidthType.span4)*@
        </div>
    </div>
    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
        Lưu
        </button>
    }
}

@section Scripts {
    @Html.ScriptBottom_ValidationMvc()
        <script>
        $(document).ready(function () {
            $('#TableName').change(function () {
                ShowLoading();
                $('#list_column_data').load('/module/GetDataTypeFromTable', { tableName: $(this).val() }, function () {
                    //console.log(res);
                    //$('#list_column_data').html(res);
                    HideLoading();
                });
            });
        });

        function getHtmlControl(obj) {
            var columnName = $(obj).find('td:nth-child(1) input').val();
            var columnType = $(obj).find('td:nth-child(2) select').val();

            switch (columnType) {
                case "datetime":
                    return '@@Html.DateInput(model => model.' + columnName + ', "dd/MM/yyyy", "99/99/9999", true)';
                    break;
                case "bigint":
                case "decimal":
                case "float":
                case "int":
                case "money":
                    return '@@Html.SpinnerFor(model => model.' + columnName + ', 100, 0, 1, SpinnerStyle.SpinnerStyle1, true)';
                    break;
                case "bit":
                    return '@@Html.CustomSwitchesFor(model => model.' + columnName + ', SwitchesStyle.CheckboxStyle, true)';
                    break;
                default:
                    return '@@Html.CustomTextboxFor(model => model.' + columnName + ', null, null, WidthType.span4, true)';
                    break;
            }
        }

        //function createViewModel()
        //{
        //    $('#list_column_data tr').each(function (index, tr) {
        //        var columnName = $(tr).find('td:nth-child(1) input').val();
        //        var columnType = $(tr).find('td:nth-child(2) select').val();

        //        var str = "        [Display(Name = \"" + columnName + "\", ResourceType = typeof(Wording))]\r\n";
        //        switch (columnType) {
        //            case "datetime":
        //                str += "        public Nullable<System.DateTime> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "bigint":
        //                str += "        public Nullable<int> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "decimal":
        //                str += "        public Nullable<decimal> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "float":
        //                str += "        public Nullable<double> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "int":
        //                str += "        public Nullable<int> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "money":
        //                str += "        public Nullable<int> " + columnName + " { get; set; }\r\n";
        //                break;
        //            case "bit":
        //                str += "        public Nullable<bool> " + columnName + " { get; set; }\r\n";
        //                break;
        //            default:
        //                str += "        public string " + columnName + " { get; set; }\r\n";
        //                break;
        //        }
        //        $("#output_html_form").val($("#output_html_form").val() + '\r\n' + str);
        //    });
        //}

        function wording(elem) {
            var columnName = $(elem).closest('tr').find('td:nth-child(1) input').val();
            var columnWording = $(elem).closest('tr').find('td:nth-child(6) input').val();

            var str = '<data name="' + columnName + '" xml:space="preserve">';
            str += '\r\n	<value>' + columnWording + '</value>';
            str += '\r\n</data>';
            str += '\r\n\r\n';
            str += '\r\n/// <summary>';
            str += '\r\n///   Looks up a localized string similar to ' + columnWording + '.';
            str += '\r\n/// </summary>';
            str += '\r\npublic static string ' + columnName + ' {';
            str += '\r\n    get {';
            str += '\r\n        return ResourceManager.GetString("' + columnName + '", resourceCulture);';
            str += '\r\n    }';
            str += '\r\n}';

            $("#output_html_form").val(str);
        }

        function htmlCode(elem) {
            $(elem).closest('tr').find('td:nth-child(5) input').val(getHtmlControl($(elem).closest('tr')));
            $("#output_html_form").val("");
            $('#list_column_data tr').each(function (index, tr) {
                $("#output_html_form").val($("#output_html_form").val() + '\r\n' + getHtmlControl(tr));
            });
        }

        function removeColumnData(elem) {
            $(elem).closest('tr').remove();

            $('#list_column_data tr').each(function (index, tr) {
                $(tr).find('td:nth-child(1) input').attr('name', 'ListColumns[' + index + '].Name')
                $(tr).find('td:nth-child(2) input').attr('name', 'ListColumns[' + index + '].Label')
                $(tr).find('td:nth-child(3) select').attr('name', 'ListColumns[' + index + '].Type')
                $(tr).find('td:nth-child(4) select').attr('name', 'ListColumns[' + index + '].IsSearch')
                $(tr).find('td:nth-child(5) select').attr('name', 'ListColumns[' + index + '].IsTable')
            });
        }

        function addColumnData() {
            var index = $('#list_column_data tr').length;
            var column = '<tr><td><input name="ListColumns[' + index + '].Name" value="" type="text" /></td>';
            column += '<td><input name="ListColumns[' + index + '].Label" value="" type="text" /></td>';
            column += '<td><select id="ListColumns_' + index + '__Type" name="ListColumns[' + index + '].Type"><option value="">- Chọn -</option>';
            column += '<option value="string">string</option><option value="bool">bool</option>';
            column += '<option value="DateTime">DateTime</option><option value="int">int</option>';
            column += '<option value="float">float</option><option value="decimal">decimal</option></select></td>';

            column += '<td><label class="checkbox"><input type="checkbox" class="ace" name="ListColumns[' + index + '].IsSearch" id="ListColumns_' + index + '__IsSearch" /> <span class="lbl"></span></label></td>';
            column += '<td><label class="checkbox"><input type="checkbox" class="ace" name="ListColumns[' + index + '].IsTable" id="ListColumns_' + index + '__IsTable" /> <span class="lbl"></span></label></td>';
            column += '<td><a class="btn btn-xs btn-danger" onclick="removeColumnData(this)">X</a></td></tr>';

            $('#list_column_data').append($(column));
            }

        function clickActive_Search(elem, id) {
            //  console.log(1111);
            var $this = $(elem);
            var $chekbox = $this.find('input[type="checkbox"]');
            if ($chekbox.is(':checked')) {
                $chekbox.prop('checked', false);
                $("#ListColumns_" + id + "__IsSearch").val("");
            } else {
                $chekbox.prop('checked', true);
                $("#ListColumns_" + id + "__IsSearch").val("true");
            }
            }

        function clickActive_Table(elem, id) {
                //  console.log(1111);
                var $this = $(elem);
                var $chekbox = $this.find('input[type="checkbox"]');
                if ($chekbox.is(':checked')) {
                    $chekbox.prop('checked', false);
                    $("#ListColumns_" + id + "__IsTable").val("");
                } else {
                    $chekbox.prop('checked', true);
                    $("#ListColumns_" + id + "__IsTable").val("true");
                }
            }
        </script>
}
