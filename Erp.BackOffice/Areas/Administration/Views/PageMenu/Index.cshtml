@model List<Erp.Domain.Entities.vwPageMenu>

@using GridMvc.Html
@using Erp.BackOffice.Helpers

@{    
    ViewBag.Title = "Quản lý menu";
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "PageMenu",
        ActionName = "Index",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = false
    };
}

<style type="text/css">
    .input-edit-inline {
        height: 23px;
        line-height: 23px;
        font-size: 10px;
    }

    .subItem2 {
        border: 1px solid #ddd;
        margin-left: -8px;
        margin-right: -8px;
        padding: 8px;
        border-width: 1px 0px 0px 0px;
        height: 39px;
    }

    .subItem {
        height: 22px;
    }
</style>

@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.AlertMessage
    </div>
}


@helper GridColumnCommand(int id)
{
    @Html.Partial("_DeletePartial", new ViewDataDictionary { { "id", id } })
}

@helper RenderEditItem(Erp.Domain.Entities.vwPageMenu pageMenu)
{
    <a class="btn btn-info btn-minier" onclick="OpenPopup('@Url.Action("Edit", "PageMenu", new { id = pageMenu.Id, IsPopup = true })', '', 700, 600)" style="margin-top:-3px">
        <i class="ace-icon fa fa-edit"></i>
        Sửa
    </a>
    @GridColumnCommand(pageMenu.Id)
    @Html.TextBox("OrderNo_" + pageMenu.Id, pageMenu.OrderNo, new { @class = "input-edit-inline", style = "width:50px" })
    @Html.TextBox("Name_" + pageMenu.Id, pageMenu.Name, new { @class = "input-edit-inline", style = "width:200px" })
    <i class="@pageMenu.CssClassIcon" id="label_cssclassicon_@pageMenu.Id"></i>
    @Html.TextBox("CssClassIcon_" + pageMenu.Id, pageMenu.CssClassIcon, new { @class = "input-edit-inline", style = "width:200px" })
    @Html.Hidden("PageId_" + pageMenu.Id, pageMenu.PageId)
    <a class="btn btn-success btn-minier" onclick="save(@pageMenu.Id)" style="margin-top:-3px">
        <i class="ace-icon fa fa-save"></i>
        Lưu
    </a>
    <span>@pageMenu.PageUrl</span>
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@if (Model != null)
{
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th width="250">@Resources.Wording.MenuName</th>
                <th>Chỉnh sửa</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(i => i.ParentId == null))
            {
                var subList = Model.Where(i => i.ParentId == item.Id).ToList();

                <tr>
                    <td>
                        <i style="cursor:pointer" class="fa @(subList.Count > 0 ? "btn-group fa-plus-square-o" : "") bigger-120" data-id="@item.Id">
                            <b id="label_name_@item.Id" style="font-family:'Open Sans'">@item.Name</b>
                        </i>
                    </td>
                    <td>@RenderEditItem(item)</td>
                </tr>
                foreach (var subItem in subList)
                {
                    var subList2 = Model.Where(i => i.ParentId == subItem.Id).ToList();

                    <tr class="item_of_@subItem.ParentId" style="display: none;">
                        <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                            <div class="subItem" style="padding-left:17px; @(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                                <i style="cursor:pointer" class="fa @(subList2.Count > 0 ? "btn-group fa-plus-square-o" : "") bigger" data-id="@subItem.Id">
                                    <b id="label_name_@subItem.Id" style="font-family:'Open Sans'"> @subItem.Name</b>
                                </i>
                            </div>

                            @foreach (var subItem2 in subList2)
                            {
                                <div class="subItem2 item_of_@subItem2.ParentId" style="padding-left: 40px; display: none">
                                    @subItem2.Name
                                </div>
                            }
                        </td>
                        <td style="@(subList2.Count > 0 ? "padding-bottom:0px" : "")">
                            <div class="subItem" style="@(subList2.Count > 0 ? "margin-bottom:8px" : "")">
                                @RenderEditItem(subItem)
                            </div>

                            @foreach (var subItem2 in subList2)
                            {
                                <div class="subItem2 item_of_@subItem2.ParentId" style="display:none">
                                    @RenderEditItem(subItem2)
                                </div>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@using (Html.BeginButtonContainer(pageSetting))
{
    <a class="btn btn-primary btn-mini" onclick="OpenPopup('@Url.Action("Create", "PageMenu", new { AreaName = Request["AreaName"] != null ? Request["AreaName"].ToString() : "", IsPopup = true })', '', 700, 600)">
        <i class="ace-icon fa fa-plus"></i>
        @Resources.Wording.CreateNew
    </a>
}

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $(".btn-group").click(function () {
                var id = $(this).data("id");
                var on = $(this).hasClass("on");
                if (on) {
                    $(".item_of_" + id).hide();
                    $(this).removeClass("on");
                    $(this).removeClass("fa-minus-square-o");
                    $(this).addClass("fa-plus-square-o");
                }
                else {
                    $(".item_of_" + id).show();
                    $(this).addClass("on");
                    $(this).removeClass("fa-plus-square-o");
                    $(this).addClass("fa-minus-square-o");
                }
            });
        });

        function save(id) {
            ShowLoading();
            var url = "/PageMenu/EditInline";
            var OrderNo = $("#OrderNo_" + id).val();
            var Name = $("#Name_" + id).val();
            var PageId = $("#PageId_" + id).val();
            var CssClassIcon = $("#CssClassIcon_" + id).val();

            $.post(url, { Id: id, OrderNo:OrderNo, Name:Name, PageId:PageId, CssClassIcon:CssClassIcon }, function (res) {
                console.log(res);
                if (res.status == 'success') {
                    $("#label_name_" + id).text(Name);
                    $("#label_cssclassicon_" + id).attr("class", CssClassIcon);
                    alertPopup('Lưu thành công!', '', 'success');
                } else {
                    alertPopup('Lưu không thành công!', 'Xin hãy kiểm tra lại.', 'error');
                }

                HideLoading();
            });
        }
    </script>
}
