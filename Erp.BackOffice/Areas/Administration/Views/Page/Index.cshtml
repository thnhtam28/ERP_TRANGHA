@model List<Erp.BackOffice.Areas.Administration.Models.ListPagesModel>
@using Erp.BackOffice.App_GlobalResources

@using GridMvc.Html
@using Erp.BackOffice.Helpers

@{
    ViewBag.Title = Resources.Wording.Pages;
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Page",
        ActionName = "Index",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false
    };
}

<style type="text/css">
    .edit-inline-control span {
        font-size: inherit;
        background: rgba(211, 211, 211, 0.76);
        height: 25px;
        width: auto;
        line-height: 13px;
    }

    .edit-inline-control {
        top: 0;
        right: -85px;
        width: 85px;
    }

    .input-edit-inline {
        height: 25px;
        line-height: 25px;
        font-size: 10px;
    }
</style>

<!--Grid.Mvc style-->
@*<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>*@


@helper GridColumnCommand(int id)
{
    @Html.Partial("_DeletePagePartial", new ViewDataDictionary { { "pageId", id }, { "AreaName", Request["AreaName"] != null ? Request["AreaName"].ToString() : "" } })
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{
    <p>
        @Html.CustomDropDownList("", "AreaName", Request["AreaName"], SelectListHelper.GetSelectList_Category("pageArea", null, "- Chọn Area -"), WidthType.span4, DropdownListStyle.DropdownListStyleChosen, null, false, false)
    </p>
}

@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.AlertMessage
    </div>
}

@if (Model != null)
{
    var controllerList = Model.GroupBy(
                                        p => p.ControllerName,
                                        (key, g) => new
                                        {
                                            ControllerName = key,
                                            ActionList = g.ToList()
                                        }
                                        );
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th width="250">@Resources.Wording.MenuName</th>
                <th>Kích hoạt</th>
                <th width="100"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var controller in controllerList)
            {
                <tr>
                    <td>
                        <i style="cursor:pointer" class="btn-group fa fa-plus-square-o bigger-120" data-controller="@controller.ControllerName">
                            <b style="font-family:'Open Sans'"> @controller.ControllerName</b>
                        </i>
                    </td>
                    <td></td>
                    <td></td>
                </tr>
                foreach (var page in controller.ActionList.OrderBy(item => item.OrderNo))
                {
                    <tr class="item_of_@page.ControllerName" style="display:none">
                        <td style="padding-left:34px">
                            <a onclick="OpenPopup('@Url.Action("Edit", "Page", new { id = page.Id, languageId = "vi-VN", IsPopup = true })', '', 500, 400)">@page.ActionName</a>
                        </td>
                        <td>
                            <label class="block">
                                <input name="form-field-checkbox" disabled type="checkbox" class="ace" @(page.Status.HasValue && page.Status.Value ? "checked=checked" : "") />
                                <span class="lbl"></span>
                            </label>
                        </td>
                        <td>@GridColumnCommand(page.Id)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@using (Html.BeginButtonContainer(pageSetting))
{
    <a class="btn btn-mini btn-primary" onclick="OpenPopup('@Url.Action("Create", pageSetting.ModuleName, new { IsPopup = true })', '', 500, 400)">
        <i class="ace-icon fa fa-plus"></i>
        @Wording.CreateNew
    </a>
    <a href="@Url.Action("Synch")" class="btn btn-white btn-sm">Đồng bộ</a>
}

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $(".btn-group").click(function () {
                var id = $(this).data("controller");
                var on = $(this).hasClass("on");
                if (on) {
                    $(".item_of_" + id).hide();
                    $(this).removeClass("on");
                    $(this).removeClass("fa-minus-square-o");
                    $(this).addClass("fa-plus-square-o");
                }
                else {
                    $(".item_of_" + id).show();
                    $(this).addClass("on");
                    $(this).removeClass("fa-plus-square-o");
                    $(this).addClass("fa-minus-square-o");
                }
            });

            //$('.input-edit-inline').editInlineInput({ id: null, url: '/Page/EditInline', disabled: true, dataId: 'id' });
        });
    </script>
}
