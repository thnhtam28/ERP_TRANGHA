@model EditUserViewModel
@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Areas.Administration.Models
@using Erp.BackOffice.Staff.Models
@{
    ViewBag.Title = Wording.EditUser;
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "User",
        ActionName = "EditUser",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    //ViewData["DrugStore"] = Model.DrugStore;
    var userType = Model.UserTypeId;
    var selectUserType = new SelectList(Model.ListUserType, "Id", "Name", userType);
    var userTypeList = Model.ListUserType.AsEnumerable().Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() });


}

@section HeadOfPage {
    @*@Html.ScriptTop_DatePicker()*@
    @Html.ScriptTop_ChosenStyle()
}
<style>
    .box {
        padding-top: 0px !important;
        padding-bottom: 0px !important;
        margin-top: 0px !important;
    }
</style>
@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.AlertMessage
    </div>
}





@using (Html.BeginPageHeaderContainer(pageSetting))
{

}


@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "EditUser", "User", null, FormMethod.Post, new { id = "EditUser", @class = "form-horizontal clearfix", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(model => model.ProfileImage)
    if (!Erp.BackOffice.Filters.SecurityFilter.IsAdmin())
    {
        @Html.HiddenFor(m => m.UserTypeId)
        @Html.HiddenFor(m => m.UserType_kd_id)
    }
    <div class="row">
        <div class="col-sm-5">
            <div class="wrap-btn-upload">
                <a class="btn btn-primary btn-sm btn-white"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                <input type="file" id="file-image" name="file-image" class="file-image" accept="image/*" onchange="previewFileImage(event, '#display-image img')" />
            </div>
            <div class="text-center" id="display-image">
                <img src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.ProfileImage, "User", "user"))" title="" id="imgAvt" style="max-height:250px" />
            </div>
        </div>
        <div class="col-sm-7">
            <div class="widget-box">
                <div class="widget-header">
                    <h5 class="widget-title">@Wording.PersonalInformation</h5>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        @Html.CustomDropDownListFor(model => model.BranchId, SelectListHelper.GetSelectList_Branch(Common.CurrentUser.BranchId, "- Chọn chi nhánh -"), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleDefault)
                        @Html.CustomTextboxFor(model => model.FirstName, null, null, WidthType.span4, true)
                        @Html.CustomTextboxFor(model => model.LastName, null, null, WidthType.span4, true)
                        @Html.DateInput(model => model.DateOfBirth, "dd/MM/yyyy", "99/99/9999", true)
                        @Html.CustomDropDownListFor(model => model.Sex, SelectListHelper.GetSelectList_Gender(Model.Sex), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleDefault)
                        @Html.CustomTextboxFor(model => model.Mobile, null, null, WidthType.span4, true)
                        @Html.CustomTextboxFor(model => model.Email, null, null, WidthType.span4, true)
                        @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span4, true)
                        @Html.CustomDropDownListFor(model => model.Staff_PositionId, SelectListHelper.GetSelectList_Position(Model.Staff_PositionId, "- Chọn chức vụ -"), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @Html.CustomDropDownListFor(model => model.IdManager, SelectListHelper.GetSelectList_UserPosition(Model.IdManager, "-Chọn người quản lý-"), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @Html.CustomTextboxFor(model => model.Discount, null, null, WidthType.span4, true)







                    </div>
                </div>
            </div>
            <p></p>
            <div class="widget-box">
                <div class="widget-header">
                    <h5 class="widget-title">@Wording.LoginInformation</h5>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        @Html.CustomTextboxFor(model => model.UserName, null, null, WidthType.span4)
                        @if (Erp.BackOffice.Filters.SecurityFilter.IsAdmin())
                        {
                            <div class="control-group form-group">
                                <label class="control-label no-padding-right col-lg-5 col-md-4 col-sm-4" for="UserTypeId">Loại người dùng</label>
                                <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                    <div class="clearfix">
                                        <select class="col-xs-4 " data-val="true" data-val-number="The field Nhóm người dùng must be a number." data-val-required="Bắt buộc nhập" id="UserTypeId" name="UserTypeId">
                                            <option @(Model.UserTypeId == null ? "selected" : "") value="" data-code="">Rỗng</option>
                                            @foreach (var item in Model.ListUserType)
                                            {
                                                <option @(Model.UserTypeId == item.Id ? "selected" : "") value="@item.Id" data-code="@item.Code">@item.Name</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="clearfix">
                                        <span class="field-validation-valid help-inline" data-valmsg-for="UserTypeId" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                            </div>
                            
                                        @Html.CustomSwitchesFor(model => model.IsLetan, SwitchesStyle.CheckboxStyle, true)
                                   

                                <div class="control-group form-group">
                                    <label class="control-label no-padding-right col-lg-5 col-md-4 col-sm-4" for="UserType_kd_id">Nhóm người dùng</label>
                                    <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                        <div class="clearfix">
                                            <select class="col-xs-4 " data-val="true" id="UserType_kd_id" name="UserType_kd_id" value="UserType_kd_id">
                                                <option @(Model.UserType_kd_id == null ? "selected" : "") value="" data-code="">Rỗng</option>
                                                @foreach (var item in Model.ListUserType_kd)
                                                {
                                                    <option @(Model.UserType_kd_id == item.Id ? "selected" : "") value="@item.Id" data-code="@item.Code">@item.Name</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="clearfix">
                                            <span class="field-validation-valid help-inline" data-valmsg-for="UserType_kd_id" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>
                        }
                        @*@if (Erp.BackOffice.Filters.SecurityFilter.IsAdmin())
                            {
                            @Html.ModulePopupFor(m => m.ParentId, "Staffs", Model.ParentName, false, false, false, null, null, "Search")
                            }*@
                    </div>
                </div>
            </div>

        </div>




    </div>

    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()
    @Html.ScriptBottom_RequireEitherInput()
    @Html.ScriptBottom_InputMask()

    <script type="text/javascript">
        $(document).ready(function () {
            $('[type="file"]').change(function () {
                var fileInput = $(this);
                if (fileInput.length && fileInput[0].files && fileInput[0].files.length) {
                    var url = window.URL || window.webkitURL;
                    var image = new Image();
                    image.onerror = function () {
                        alert("File tải lên bắt buộc phải là hình ảnh (.png, .jpg, .jpeg,...)");
                        $("#imgAvt").attr("src", "@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.ProfileImage, "User", "user"))");
                    };
                    image.src = url.createObjectURL(fileInput[0].files[0]);
                }
            });
        });
        $('[name="Submit"]').click(function () {
            debugger
            var mobile = $('#Mobile').val();
            var vnf_regex_mobile = /((09|03|07|08|05)+([0-9]{8})\b)/g;;
            if (mobile !== '') {
                if (vnf_regex_mobile.test(mobile) == false) {
                    alertPopup('Lỗi!', 'Số di động của bạn không đúng định dạng!', 'error');
                    return false;
                }
            }
        });
        $(document).ready(function () {
            $('#UserTypeId').on('change', function () {
                var $this = $(this);
                var selected = $this.find("option:selected");

                if (selected.val() == '')
                    return;
                if (selected.data("code") == 'ASM') {

                }
                var CommissionCusId = $("#Id").val();

                //var formdata = {
                //    CategoryCode: selected.val(),
                //    CommissionCusId: CommissionCusId
                //};
                //$('#detailList').html("");
                ////Thêm dòng mới
                //ClickEventHandler(true, "/CommissionCus/LoadProduct", "#detailList", formdata);
            });
        });

        $('[id="Discount"]').change(function () {
            $(this).val($(this).val().replace(/\-/g, ''));
            $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
            var ralVal = numeral($(this).val());
            if (ralVal <= 0) {
                $(this).val(0);
            }
            else if (ralVal > 999) {
                $(this).val(999);
            }
        });
    </script>
}
