@using Erp.BackOffice.Helpers
@model Erp.BackOffice.Areas.Administration.Models.AccessRightViewModel

@{
    ViewBag.Title = "Quyền truy cập - Trang người dùng";
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    var dvstyle = "style='display:none;'";
 
}

@if (ViewBag.AlertMessage != null && ViewBag.AlertMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.AlertMessage
    </div>
}
else if(TempData["AlertMessage"] !=null && TempData["AlertMessage"] !="")
{
    
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="icon-remove"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @TempData["AlertMessage"]
    </div>    
}

@using Erp.BackOffice.Areas.Administration.Models
@helper RecursiveACL(List<PageMenuViewModel> pageMenuViewModels, int? parentId, List<Erp.Domain.Entities.User> users, string level = "")
{   
    int index = 1;
    List<PageMenuViewModel> parentMenus = pageMenuViewModels.Where(x => x.ParentId == parentId).OrderBy(x => x.OrderNo).ToList();
    foreach (PageMenuViewModel pageMenuViewModel in parentMenus)
    {
        string prefix = string.IsNullOrEmpty(level) ? index.ToString() : level + "." + index.ToString();
        int n = prefix.Split('.').Count();
        string tab = "";
        for (int i = 1; i < n; i++)
        {
            tab = tab + @"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        }
        <tr>            
            <td>@HttpContext.Current.Server.HtmlDecode(tab)@prefix @pageMenuViewModel.MenuItemName</td>
            @if (pageMenuViewModel.IsParent)
            {
                <td colspan="@Model.Users.Count"></td>
            }
            else
            {
                foreach (var user in users)
                {
                    var userTypePage = pageMenuViewModel.UserTypePages != null ? pageMenuViewModel.UserTypePages.Where(x => x.PageId == pageMenuViewModel.Id && x.UserTypeId == user.UserTypeId).FirstOrDefault() : null;
                    var userPage = pageMenuViewModel.UserPages != null ? pageMenuViewModel.UserPages.Where(x => x.PageId == pageMenuViewModel.Id && x.UserId == user.Id).FirstOrDefault() : null;

                    var checkedAndEnbale = userPage != null ? "checked=\"checked\"" : "";
                    if (userTypePage != null)
                    {
                        checkedAndEnbale = "checked=\"checked\" disabled=\"true\"";
                    }  
                    <td>                           
                        <label>
                            <input type="checkbox" id="UserPage" name="UserPage" value="@pageMenuViewModel.Id-@user.Id" @checkedAndEnbale />
                            <span class="lbl"></span>
                        </label>
                           
                    </td>
                }
            }                
            
        </tr>    
       @RecursiveACL(pageMenuViewModels, pageMenuViewModel.Id, users, prefix);
                                                                            index++;
    }
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}


@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "CreateUserPage", "AccessRight", null, FormMethod.Post, new { id = "accessRight", @class = "form-horizontal" }))
{
    @Html.CustomDropDownListFor(model => model.UserIds, (SelectList)ViewBag.Users, WidthType.span4, DropdownListStyle.DropdownListStyleChosen, true, "Vui lòng chọn.", false)
    <img id="imgAjaxLoader" alt="loading" src="@Url.Content("~/Images/ajax-loader.gif")" style="display:none" />
    <div id="dvUserPage" class="control-group lesson-dropdowncontainer">
        @if (TempData["ListUserIds"] != null)
        {
            dvstyle = "style='display:block;'";
            <table class="table table-striped table-bordered table-hover">
                <tr>
                    <td>@Resources.Wording.Function</td>
                    @foreach (var user in Model.Users)
                    {
                        <td>@user.FullName</td>
                    }
                </tr>
                @RecursiveACL(Model.PageMenuViewModels, null, Model.Users)
            </table>
        }
    </div>
    
    <div class="row-fluid wizard-actions span5" id="dvbtnSave" @dvstyle >
        <button type="submit" class="btn btn-info" name="Submit" value="Save" id="btnSave">
            <i class="ace-icon fa fa-check bigger-110"></i>
            @Resources.Wording.Save				
        </button>
    </div>  
  
}

@section Scripts {
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()    

    <script type="text/javascript">
        //lam
        //$(function(){
        //    var $searchBox = $('div.chzn-search input');
        //    $searchBox.autocomplete.autocomplete({
        //        source: function (request, response) {
        //            $.ajax({
        //                url: "/AccessRight/FindUser", type: "GET", dataType: "json",
        //                //original code
        //                //data: { searchText: request.id, maxResults: 10 },
        //                //updated code; updated to request.term 
        //                //and removed the maxResults since you are not using it on the server side
        //                data: { name: request.term },

        //                success: function (data) {
        //                    response($.map(data, function (item) {
        //                        //original code
        //                        //return { label: item.FullName, value: item.FullName, id: item.TagId }; 
        //                        //updated code
        //                        return { label: item.label, value: item.label, id: item.id };
        //                    }));
        //                },
        //                select: function (event, ui) {
        //                    //update the jQuery selector here to your target hidden field
        //                    $("input[type=hidden]").val(ui.item.id);
        //                }
        //            });
        //        },
        //    });
        //});
       

        //end lam


        $("#UserIds").change(function () {
            $('#imgAjaxLoader').show();
            LoadUserPageDetail($('#UserIds').val());
            
        });

        function ClearForm () {
            for (var i = $('#UserIds').children().length; i >= 1; i--) {
                $("select#TestIds option:nth-child(" + i + ")").remove();
            }
            $(".chzn-select").trigger('liszt:updated');

            $("#dvUserPage").html('');
        }

        function LoadUserPageDetail(UsersId) {            
            $.ajax({
                async: "false",
                url: '@Url.Action("UserPageDetail","AccessRight", new {area="Administration"} )',
                type: "POST",
                data: { arrayUserId: UsersId.toString() },
                success: function (data) {
                    ClearForm();
                    $("#dvUserPage").html(data);
                    $("#dvbtnSave").show();
                    $('#imgAjaxLoader').hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('#imgAjaxLoader').hide();
                }
            });            
        }
    </script>
}
