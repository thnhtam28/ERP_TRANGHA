@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Staff.Models
@using GridMvc.Html
@model DotBCBHXHViewModel

@{
    ViewBag.Title = Wording.PageDetail_DotBCBHXH;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "DotBCBHXH",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}
<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@helper GridColumnName(string name, int id)
{
    name = string.IsNullOrEmpty(name) ? "No Title" : name;
    <a onclick="OpenPopup('@Url.Action("Detail", "DotBCBHXHDetail", new { Id = id , IsPopup = true })', 'Chi tiết', 0, 0)">@name</a>

}
@helper GridColumnMedical(string code)
{
    if (!string.IsNullOrEmpty(code))
    {
        <i class="ace-icon fa fa-check green"> @code</i>
    }
    else
    {
        <i class="ace-icon fa fa-times red"></i>
    }
}
<div class="detail-view">
    <div class="row control-group">
        @Html.DetailViewItemFor2(model => model.BatchNumber)
    </div>
    <div class="row control-group">
        @Html.DetailViewItemFor2(model => model.Month)
    </div>
    <div class="row control-group">
        @Html.DetailViewItemFor2(model => model.Year)
    </div>
    <div class="row control-group">
        @Html.DetailViewItemFor2(model => model.Name)
    </div>
</div>
<div class="row top-5">
    <div class="col-sm-12">
        <div class="widget-box">
            <div class="widget-header">
                <h5 class="widget-title">@Wording.Increase</h5>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    @Html.Grid(Model.ListDotBCBHXHDetail.Where(u => u.Type.Contains("Increase"))).Columns(columns =>
                        {
                            columns.Add().Titled(Wording.StaffName).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.StaffName, u.Id));
                            columns.Add().Titled(Wording.SocietyCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.SocietyCode)).SetWidth(100);
                            columns.Add().Titled(Wording.MedicalCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.MedicalCode)).SetWidth(100);
                            columns.Add().Titled(Wording.Note).Sanitized(false).Encoded(false).RenderValueAs(u => u.Note).SetWidth(300);
                        })
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row top-5">
    <div class="col-sm-12">
        <div class="widget-box">
            <div class="widget-header">
                <h5 class="widget-title">@Wording.Reduced</h5>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    @Html.Grid(Model.ListDotBCBHXHDetail.Where(u => u.Type.Contains("Reduced"))).Columns(columns =>
                        {
                            columns.Add().Titled(Wording.StaffName).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.StaffName, u.Id));
                            columns.Add().Titled(Wording.SocietyCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.SocietyCode)).SetWidth(100);
                            columns.Add().Titled(Wording.MedicalCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.MedicalCode)).SetWidth(100);
                            columns.Add().Titled(Wording.Note).Sanitized(false).Encoded(false).RenderValueAs(u => u.Note).SetWidth(300);
                        })
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row top-5">
    <div class="col-sm-12">
        <div class="widget-box">
            <div class="widget-header">
                <h5 class="widget-title">@Wording.Adjusted</h5>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    @Html.Grid(Model.ListDotBCBHXHDetail.Where(u => u.Type.Contains("Adjusted"))).Columns(columns =>
                        {
                            columns.Add().Titled(Wording.StaffName).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.StaffName, u.Id));
                            columns.Add().Titled(Wording.SocietyCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.SocietyCode)).SetWidth(100);
                            columns.Add().Titled(Wording.MedicalCode).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnMedical(u.MedicalCode)).SetWidth(100);
                            columns.Add().Titled(Wording.Note).Sanitized(false).Encoded(false).RenderValueAs(u => u.Note).SetWidth(300);
                        })
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginButtonContainer(pageSetting))
{
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Edit", "DotBCBHXH", "Staff"))
    {
        <a class="btn btn-mini btn-primary" href="@Url.Action("Edit", pageSetting.ModuleName, new { Id = Model.Id })">
            <i class="ace-icon fa fa-edit"></i>
            @Wording.Edit
        </a>
    }
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("ReportList", "DotBCBHXHDetail", "Staff"))
    {
        <a class="btn btn-mini btn-success" onclick="OpenPopup('@Url.Action("ReportList", "DotBCBHXHDetail", new { BatchNumber = Model.BatchNumber, Month = Model.Month, Year = Model.Year, IsPopup = true })', '', 0, 0)">
            <i class="ace-icon fa fa-print"></i>
            Báo cáo
        </a>
    }
}

@section Scripts {
    <script type="text/javascript">
        function CheckIsval() {
            if ($('[name="DeleteAll-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })

    </script>
}
