@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Staff.Models

@model ShiftsViewModel

@{
    ViewBag.Title = Wording.PageEdit_Shifts;
    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Shifts",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
    <link rel="stylesheet" href="/assets/css/bootstrap-timepicker.min.css" />
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "Shifts", null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.CategoryShifts)

    @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.StartTimeIn, "HH:mm", null, WidthType.span12, true, null, null, "control-label col-lg-5 col-md-4 col-sm-6", "col-lg-7 col-md-8 col-sm-6")
    @Html.CustomTextboxFor(model => model.StartTime, "HH:mm", null, WidthType.span12, true)
    @Html.CustomTextboxFor(model => model.StartTimeOut, "HH:mm", null, WidthType.span12, true)


    @Html.CustomTextboxFor(model => model.EndTimeIn, "HH:mm", null, WidthType.span12, true)
    @Html.CustomTextboxFor(model => model.EndTime, "HH:mm", null, WidthType.span12, true)
    @Html.CustomTextboxFor(model => model.EndTimeOut, "HH:mm", null, WidthType.span12, true)

    @Html.CustomSwitchesFor(model => model.NightShifts, SwitchesStyle.CheckboxStyle, true)
    @Html.CustomTextboxFor(model => model.MinuteLate, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-6 text-right" } })
    @Html.CustomTextboxFor(model => model.MinuteEarly, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-6 text-right" } })
    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    <script src="/assets/js/bootstrap-timepicker.min.js"></script>
    <script>
       //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Name</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }
                $('#StartTimeIn').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
                $('#StartTime').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
                $('#StartTimeOut').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
                $('#EndTimeIn').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
                $('#EndTime').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
                $('#EndTimeOut').timepicker({
                    minuteStep: 1,
                    template: 'modal',
                    appendWidgetTo: 'body',
                    showSeconds: false,
                    showMeridian: false,
                    defaultTime: false
                });
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
}
