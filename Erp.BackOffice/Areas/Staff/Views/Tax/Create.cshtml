@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Staff.Models

@model TaxViewModel

@{
    ViewBag.Title = Wording.PageCreate_Tax;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "Tax",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />

    <div id="" class="control-group form-group">
        <label class="control-label col-lg-5 col-md-4 col-sm-4" for="Name">Tên</label>
        <div class="control-value col-lg-7 col-md-8 col-sm-8">
            <div class="clearfix">
                <input autocomplete="off" class="col-xs-10" id="Name" maskformat="" name="Name" placeholder="" readonly="readonly" type="text" value="Thuế thu nhập cá nhân" aria-invalid="false">
            </div>
            <div class="clearfix">
                <span class="field-validation-valid help-inline" data-valmsg-for="Name" data-valmsg-replace="true"></span>
            </div>
        </div>
    </div>

        @Html.CustomDropDownListFor(model => model.SalaryTableId, SelectListHelper.GetSelectList_Salaytable(null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
        @Html.CustomDropDownListFor(model => model.TaxIncomePersonId, SelectListHelper.GetSelectList_TaxIncomePerson(null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
        @Html.MonthPicker(model => model.Month)
        @Html.YearPicker(model => model.Year)

      

    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {    
    <script>
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Name</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()    
    @Html.ScriptBottom_ChosenStyle()
}
