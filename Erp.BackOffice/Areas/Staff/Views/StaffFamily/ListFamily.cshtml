@model IEnumerable<StaffsViewModel>

    @using Erp.BackOffice.App_GlobalResources
    @using Erp.BackOffice.Staff.Models
    @using Erp.BackOffice.Helpers
    @using GridMvc.Html

    @{
        ViewBag.Title = Wording.ListFamilyAllowance;
        bool isPopup = Request["IsPopup"] != null && Request["IsPopup"].ToString().ToLower() == "true" ? true : false;
        if (isPopup)
        {
            Layout = "~/Views/Shared/_PopupLayout.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
        }

        Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
        {
            ModuleName = "StaffFamily",
            ActionName = "ListFamily",
            PageTitle = ViewBag.Title,
            DisplaySearchPanel = true,
            IsPopup = false,
            DisplayBackButton = false
        };
    }

    <link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

    @helper GridColumnCommand(int id)
    {
    <div class="hidden-phone visible-desktop action-buttons" style="display: inline-block; float: left;">
        <p>
            <a class="btn btn-success btn-mini btn-StaffFamilyCreate" data-rel="tooltip" title="" data-original-title="Thêm mới người thân" onclick="OpenPopup('/StaffFamily/Create?StaffId='+@id+'&amp;IsPopup=true', 'Thêm thân nhân', 800, 500)"><i class="ace-icon fa fa-plus"></i></a>
            <button name="" onclick="OpenPopup('/StaffFamily/DetailList?StaffId='+@id+'&IsPopup=true&Delete=true', 'Thêm thân nhân', 800, 500)" type="button" class="btn btn-mini btn-danger" data-rel="tooltip" title="" data-original-title="Xóa người thân">
                <i class="ace-icon fa fa-trash bigger-120"></i>
            </button>
            @*<button id="Edit" name="Edit" value="@id" type="button" class="btn btn-mini btn-primary">
                    <i class="ace-icon fa fa-pencil bigger-120"></i>
                </button>*@
        </p>
    </div>
}

    @helper GridColumnName(string name, int id, bool isPopup)
    {
if (isPopup)
{
        <a onclick="parent.selectBranchItem(@id)">@name</a>
}
else
{
    name = string.IsNullOrEmpty(name) ? "No Title" : name;
        <a href="#" onclick="OpenPopup('@Url.Action("Detail", "Staffs" , new { Id= id, IsPopup= true })', 'Thông tin chi tiết', 0, 0)">@name</a>
}
}

    @helper GridColumnNameFamily(int id, int countfamily, bool isPopup)
    {
string name = string.Format("{0} thành viên gia đình ", countfamily);
if (isPopup)
{
        <a onclick="parent.selectBranchItem(@id)">@name</a>
}
else
{
        <a href="#" onclick="OpenPopup('@Url.Action("DetailList", "StaffFamily" , new { staffId= id, IsPopup= true })', '@Wording.PageIndex_StaffFamily', 500, 600)">@name</a>

}
}


    @helper CheckDeleteColumns(int Id)
    {
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

    @helper BuildCheckAll()
    {
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}

    @using (Html.BeginPageHeaderContainer(pageSetting))
    {
        <p>
            @Html.TextBox("Code", Request["Code"], new { @class = "form-control", autocomplete = "off", placeholder = Wording.CodeStaff + "..." })
            @Html.TextBox("Name", Request["Name"], new { @class = "form-control", autocomplete = "off", placeholder = Wording.StaffName + "..." })

        </p>
    }

    @if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
    {
        <div class="alert alert-block alert-success">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-check green"></i>
            @ViewBag.SuccessMessage
        </div>
    }

    @if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
    {
        <div class="alert alert-block alert-danger">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-warning red"></i>
            @ViewBag.FailedMessage
        </div>
    }

    @if (!isPopup)
    {

        using (Html.BeginForm("DeleteAll", pageSetting.ModuleName, FormMethod.Post))
        {
            <div class="table-responsive">
                @Html.Grid(Model).Columns(columns =>
   {
       int index = 0;
       columns.Add().Titled(Wording.OrderNo).SetWidth(30).RenderValueAs(n => (++index).ToString());
       //  columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
       columns.Add(u => u.Code).Titled(Wording.CodeStaff);
       columns.Add().Titled(Wording.StaffName).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Name, u.Id, isPopup));
       columns.Add().Titled(Wording.PageIndex_StaffFamily).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnNameFamily(u.Id, u.CountFamily, isPopup));

       columns.Add(u => u.GenderName).Titled(Wording.GenderName);
       columns.Add(u => u.IdCardNumber).Titled(Wording.IdCardNumber);
       columns.Add(u => u.BranchName).Titled(Wording.BranchName);
       columns.Add(u => u.CreatedDate).Titled(Wording.CreatedDate).SetWidth(100).Format("{0:dd/MM/yyyy}");
       columns.Add(u => u.ModifiedDate).Titled(Wording.ModifiedDate).SetWidth(100).Sortable(true).Format("{0:dd/MM/yyyy}");
       columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(80);
   }).WithPaging(10)
            </div>
            using (Html.BeginButtonContainer(pageSetting))
            {
                <button class="btn btn-mini btn-primary" type="button" name="AddStaff" value="Save" onclick="OpenPopup('/StaffFamily/CreateListFamily?IsPopup=true', 'Thêm thân nhân gia đình', 0, 0)">
                    <i class="ace-icon fa fa-plus"></i>
                    @Wording.CreateNew
                </button>

                @*<button name="DeleteAll" value="DeleteAll" type="submit" class="btn btn-mini btn-danger" onclick="return CheckIsval();">
                        <i class="ace-icon fa fa-trash bigger-120"></i>
                        @Wording.Delete
                    </button>*@
            }
        }
    }
    else
    {
        @Html.Grid(Model).Columns(columns =>
    {
        //columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
        columns.Add().Titled(Html.DisplayNameFor(u => u.FirstOrDefault().Name).ToString()).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Name, u.Id, isPopup));
    }).WithPaging(10)
    }

    @section Scripts {
        <script type="text/javascript">
            jQuery(function ($) {
                $('[data-rel=tooltip]').tooltip();
            });

            //function CheckIsval() {
            //    var id = $(this).val();
            //    if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
            //        alert("Phải chọn ít nhất 1 item.");
            //        return false;
            //    }
            //    else {
            //        if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
            //            return true;
            //        }
            //        else {
            //            return false;
            //        }

            //    }
            //}

            function ClosePopupAndReloadPageStaffDetail() {
                ClosePopup(true);
                ShowLoading();
            };

            //$('#Edit').click(function () {
            //    window.location = "TaxIncomePerson/Edit?Id=" + $(this).val();
            //});

            $('[name="Delete"]').click(function () {
                if (confirm('Bạn có chắc muốn xóa item ?')) {
                    $(this).closest('tr').children('td').each(function (i, e) {
                        $(this).find("input.class-delete-all").prop("checked", true);
                        return true;
                    })
                }
                else {
                    return false;
                }

            })

        </script>
    }
