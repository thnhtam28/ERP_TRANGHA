@model IEnumerable<ThuNhapChiuThueViewModel>

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Staff.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html
@using System.Globalization

@{
    CultureInfo cul = CultureInfo.GetCultureInfo("vi-VN");
    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

@helper GridColumnCommand(int id)
{
    <button name="Delete" value="Delete" type="submit" id="btn_delete_stafffamily_@id" class="btn btn-mini btn-danger" onclick="return StaffFamilyDelete(@id)">
        <i class="ace-icon fa fa-trash bigger-120"></i>
    </button>
}

@helper GridColumnName(string name, int id)
{
    <a href="@Url.Action("Edit", "ThuNhapChiuThue", new { area = "Staff", Id = id, IsPopup = "true" })" >@name</a>
}

@helper CheckDeleteColumns(int Id)
{
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}



    <p>
        <a href="@Url.Action("Create", "ThuNhapChiuThue",new { area = "Staff",TaxIncomePersonDetailId= Request["TaxIncomePersonDetailId"],staffId= Request["staffId"] ,TaxId = Request["TaxId"], IsPopup = "true" })" class="btn btn-mini btn-success"><i class="ace-icon fa fa-plus"></i> @Wording.Add</a>
    </p>

  @using (Html.BeginForm("Delete", "ThuNhapChiuThue", FormMethod.Post))
  {
<div class="table-responsive">
    @Html.Grid(Model).Columns(columns =>
{
    int index = 0;
    columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
    columns.Add().Titled(Wording.OrderNo).SetWidth(30).RenderValueAs(n => (++index).ToString());
    columns.Add().Titled(Wording.Name).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Name, u.Id));
    columns.Add().Titled(Wording.Money).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(u.Value)).Css("text-right");
    columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(100);
})
</div>
  }

@*@if (Model != null && Model.Count() > 0)
{
    <div class="page-header">
        <h1>
            Tổng Cộng:
        </h1>
    </div>
    <h3 style="color:red;" class="pull-right" >
        @(Model.Sum(n => n.Value).Value == 0 ? "0" : Model.Sum(n => n.Value).Value.ToString("#,###", cul.NumberFormat)) đ
    </h3>
}*@

@section Scripts {
    <script type="text/javascript">
        function ClosePopupAndReloadPageStaffDetail() {
            ClosePopup(true);
            ShowLoading();
        };
        //hàm xóa technique nằm trong trang detail staff

    </script>

<script type="text/javascript">
        function CheckIsval() {
            if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })
        $('a').click(function () {
            ShowLoading();
        });
        $(function () {
            var sum = 0;

            $("tr.grid-row").each(function () {
                var tr = $(this);
                var rows = $(tr).children();
                var amount = rows[3].innerHTML;

                amount = amount.replace(/\./g, '');
                amount = parseFloat(amount);
                //console.log(amount);
                sum += amount;
            });

            //sum = sum.toFixed(2);
            var trTotals = "<tr><td></td><td></td><td></td><td style='color:red;font-weight:bold;text-align: right;'>" + currencyFormat(sum) + "</td><td></td></tr>"
            $("tr.grid-row:last").after(trTotals);
        });
</script>
}