@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Staff.Models

@model CalendarVisitDrugStoreViewModel

@{
    ViewBag.Title = "Thêm kế hoạch thăm Chi nhánh";

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "CalendarVisitDrugStore",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    ViewData["DrugStore"] = "";
    IEnumerable<SelectListItem> departmentList = Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_DepartmentAllNew(null, Wording.Empty);
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
   
    <div class="row">
        <div class="col-sm-7">
            @Html.Partial("_SearchDrugStoreByUser", ViewData["DrugStore"])
        </div>
        <div class="col-sm-5">
            <div class="widget-box">
                <div class="widget-header">
                    <h5 class="widget-title">Thông tin kế hoạch</h5>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        @Html.HiddenFor(model => model.StaffId)
                        <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
                        <input type="hidden" name="UrlReferrer" value="@Request.UrlReferrer" />
                        @*@Html.CustomDropDownListFor(model => model.DrugStoreId, departmentList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)*@
                        @Html.DateTimePicker(model => model.StartDate, "dd/MM/yyyy H:mm", "00/00/0000 00:00:00", true, false)
                        @Html.DateTimePicker(model => model.EndDate, "dd/MM/yyyy H:mm", "00/00/0000 00:00:00", true, false)
                        @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12, true)
                    </div>
                </div>
            </div>
        </div>
    </div>
  
    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {    
   <script>
       var urlRefer = '@ViewBag.urlRefer';
       //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
       var closePopup = '@ViewBag.closePopup';
       $(document).ready(function () {
           //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
           if (closePopup != '') {
               var option = '<option value="@Model.Id" >@Model.DrugStoreCode</option>';
               //nếu có url thì gọi hàm này để trang ngoài iframe nhảy trang
               if (urlRefer != '') {
                   window.parent.ClosePopupAndRedirectToURL(urlRefer);
               }
               //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
               window.parent.ClosePopupAndDoSomething(option);
           }
       });
       $(document).ready(function () {
           $('[data-rel="tooltip"]').tooltip({ container: 'body' });

       });
</script>
@Html.ScriptBottom_ValidationMvc()
@Html.ScriptBottom_ChosenStyle()
@Html.ScriptBottom_DatePicker("dd/mm/yyyy")
}
