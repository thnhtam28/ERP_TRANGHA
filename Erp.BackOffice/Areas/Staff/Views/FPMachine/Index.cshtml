@model List<FPMachineViewModel>

    @using Erp.BackOffice.App_GlobalResources
    @using Erp.BackOffice.Staff.Models
    @using Erp.BackOffice.Helpers
    @using GridMvc.Html

    @{
        ViewBag.Title = Wording.PageIndex_FPMachine;
        bool isPopup = Request["popup"] != null && Request["popup"].ToString().ToLower() == "true" ? true : false;
        if (isPopup)
        {
            Layout = "~/Views/Shared/_PopupLayout.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
        }
        Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
        {
            ModuleName = "FPMachine",
            ActionName = "Index",
            PageTitle = ViewBag.Title,
            DisplaySearchPanel = false,
            IsPopup = false,
            DisplayBackButton = false
        };
    }

    @if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
    {
        <div class="alert alert-block alert-success">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-check green"></i>
            @ViewBag.SuccessMessage
        </div>
    }

    @if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
    {
        <div class="alert alert-block alert-danger">
            <button class="close" data-dismiss="alert" type="button">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <i class="ace-icon fa fa-warning red"></i>
            @ViewBag.FailedMessage
        </div>
    }

    <link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>

    @helper GridColumnCommand(int id)
        {
            <button name="Delete" value="Delete" type="submit" class="btn btn-minier btn-danger">
                <i class="ace-icon fa fa-trash"></i>
            </button>
}

    @helper GridColumnName(string name, int id, bool isPopup, DateTime d)
        {
            if (isPopup)
            {
                <a onclick="parent.selectBranchItem(@id)">@name</a>
            }
            else
            {
                name = string.IsNullOrEmpty(name) ? "No Title" : name;
                if (d.AddMinutes(15) > DateTime.Now)
                {
                    <i class="ace-icon fa fa-circle light-green"></i>
                }
                else
                {
                    <i class="ace-icon fa fa-circle" style="color:#ccc"></i>
                }
                <a href="@Url.Action("Edit", "FPMachine" , new { Id= id })">
                    @name
                </a>
            }
}

    @helper GridColumnCategoryValue(object value)
        {
            var attr = Common.GetCategoryByValueOrId("value", value);
            <span>@(attr != null ? attr.Name : "")</span>
}

    @helper CheckDeleteColumns(int Id)
        {
            <label>
                <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
                <span class="lbl"></span>
            </label>
}

    @helper BuildCheckAll()
        {
            <label>
                <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
                <span class="lbl"></span>
            </label>
}

    @using (Html.BeginPageHeaderContainer(pageSetting))
    {

    }
    @if (!isPopup)
    {
        using (Html.BeginForm("Delete", "FPMachine", FormMethod.Post))
        {
            <div class="table-responsive">
                @Html.Grid(Model).Columns(columns =>
                {
                columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
                columns.Add().Titled(Wording.Name).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Ten_may, u.Id, isPopup, u.UpdatedDate.Value)).SetWidth(200);
                columns.Add(u => u.Ten_may_tinh).Titled("Tên máy tính").SetWidth(150);
                columns.Add(u => u.Dia_chi_IP).Titled("IP").SetWidth(150);
                columns.Add(u => u.Port).Titled("Port").SetWidth(50);
                columns.Add(u => u.GetDataSchedule).Titled("Lịch lấy dữ liệu").Format("{0:dd/MM/yyyy HH:mm}").SetWidth(130);
                columns.Add(u => u.TeamviewerID).Titled("TeamviewerID").SetWidth(100);
                columns.Add(u => u.TeamviewerPassword).Titled("TeamviewerPassword").SetWidth(100);
                columns.Add().Titled("Vân tay").Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => u.count_van_tay + "/" + u.total_van_tay).SetWidth(100).Css("text-right");
                columns.Add(u => u.Note).Titled("Ghi chú");
                columns.Add(u => u.UpdatedDate).Titled(Wording.ModifiedDate).Sortable(true).Format("{0:dd/MM/yyyy HH:mm}");
                columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(20);
                }).WithPaging(20)
            </div>
            using (Html.BeginButtonContainer(pageSetting))
            {
                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "FPMachine", "Staff"))
                {
                    <a class="btn btn-mini btn-primary" href="@Url.Action("Create", pageSetting.ModuleName)">
                        <i class="ace-icon fa fa-plus"></i>
                        @Wording.CreateNew
                    </a>
                }

                if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "FPMachine", "Staff"))
                {
                    <button class="btn btn-mini btn-danger" type="submit" name="DeleteAll" value="DeleteAll" onclick="return CheckIsval();">
                        <i class="ace-icon fa fa-trash"></i>
                        @Wording.Delete
                    </button>
                }
            }
        }
    }

    @section Scripts {
        <script type="text/javascript">
            function CheckIsval() {
                if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                    alert("Phải chọn ít nhất 1 item.");
                    return false;
                }
                else {
                    if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            }

            $('[name="Delete"]').click(function () {
                if (confirm('Bạn có chắc muốn xóa item ?')) {
                    $(this).closest('tr').children('td').each(function (i, e) {
                        $(this).find("input.class-delete-all").prop("checked", true);
                        return true;
                    })
                }
                else {
                    return false;
                }

            })

        </script>
    }
