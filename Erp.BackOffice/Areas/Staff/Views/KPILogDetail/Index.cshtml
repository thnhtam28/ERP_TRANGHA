@model IQueryable<KPILogDetailViewModel>

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Staff.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html

@{
    ViewBag.Title = Wording.PageIndex_KPILogDetail;
    Layout = null;

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "KPILogDetail",
        ActionName = "Index",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false
    };

    int KPILogId = Convert.ToInt32(ViewBag.KPILogId);
    int KPICatalogId = Convert.ToInt32(ViewBag.KPICatalogId);
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

@helper GridColumnCommand(int id)
{
    <button name="Delete" value="Delete" type="submit" class="btn btn-minier btn-danger">
        <i class="ace-icon fa fa-trash"></i>
    </button>
}

@helper GridColumnName(string name, int id, int KPICatalogId)
{
    <a onclick="OpenPopup('@Url.Action("Index", "KPILogDetail_Item", new { KPILogDetailId = id, KPICatalogId = KPICatalogId })', 'Danh sách tiêu chí', 700, 600)">@name</a>
}

@helper GridColumnAchieveKPIWeight(double value)
{
    <span style="font-size:11px">@value%</span>
    <div class="progress progress-mini" style="margin-bottom:0px">
        <div class="progress-bar progress-danger" style="width: @(value.ToString().Replace(",", "."))%;"></div>
    </div>
}

@helper GridColumnCategoryValue(object value)
{
    var attr = Common.GetCategoryByValueOrId("value", value);
    <span>@(attr != null ? attr.Name : "")</span>
}

@helper CheckDeleteColumns(int Id)
{
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}

<p>
    <a class="btn btn-sm btn-white" onclick="OpenPopup('/Staffs/Search?IsPopup=true', 'Tìm kiếm nhân sự', 700, 600)">
        <i class="fa fa-search"></i>
        Chọn nhân sự
    </a>
</p>

@using (Html.BeginForm("Delete", pageSetting.ModuleName, FormMethod.Post))
{
    @Html.Hidden("KPILogId", KPILogId)
    @Html.Grid(Model).Columns(columns =>
    {
        columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
        columns.Add().Titled(Wording.Name).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.StaffName, u.Id, KPICatalogId)).SetWidth(200);
        columns.Add().Titled("Kết quả").Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnAchieveKPIWeight(u.AchieveKPIWeight)).SetWidth(200);
        columns.Add().Titled("Đánh giá").Sanitized(false).Encoded(false).RenderValueAs(u => (u.Completed ? "<span style=\"color:green; font-weight:bold\">Đạt</span>" : "<span style=\"color:red; font-weight:bold\">Không đạt</span>"));
        columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(20);
    })
}