@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Staff.Models

@model TransferWorkViewModel

@{
    ViewBag.Title = Wording.PageEdit_TransferWork;

    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Model.PositionOldName = Erp.BackOffice.Helpers.Common.GetCategoryByValueCodeOrId("value", Model.PositionOld, "position").Name.ToString();
        Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "TransferWork",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = false
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
<style type="text/css">

</style>
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "TransferWork", null, FormMethod.Post, new { @class = "form-horizontal"}))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.UserId)
    @*@Html.HiddenFor(model => model.Status)*@
    @Html.HiddenFor(model => model.Code)
    @Html.HiddenFor(model => model.CodeStaffOld)
    @Html.HiddenFor(model => model.StaffId)
    @Html.HiddenFor(model => model.BranchDepartmentOldId)
    @Html.HiddenFor(model => model.PositionOld)
    @Html.HiddenFor(model => model.DayDecision)
    <div class="col-sm-2">
            <a data-toggle="tooltip" title='
            <img  id="ProfileImage" src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.ProfileImage,"Staff","user"))" style="width:100%" />'>
                <img class="profile-picture" src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.ProfileImage,"Staff","user"))" style="width:100%" height="177" alt="" />
        </a>
    </div>
    <div class="col-sm-5">
        @Html.DatePicker(model => model.DayEffective, "dd/MM/yyyy", "99/99/9999", true, true, "control-label col-lg-5 col-md-4 col-sm-4", "col-lg-7 col-md-8 col-sm-8", "col-xs-12")
        @*@Html.CustomDropDownListFor(model => model.StaffId, SelectListHelper.GetSelectList_Staff(null, Wording.Empty),  new Dictionary<string, object> { { "readonly", "readonly" } },WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)*@
        @Html.CustomTextboxFor(model => model.NameStaff, null, null, WidthType.span12, true, new Dictionary<string, object> { { "readonly", "readonly" } })
         @Html.CustomTextboxFor(model => model.BranchNameOld, null, null, WidthType.span12, true, new Dictionary<string, object> { { "readonly", "readonly" } })
        @Html.CustomTextboxFor(model => model.Staff_DepartmentOld, null, null, WidthType.span12, true, new Dictionary<string, object> { { "readonly", "readonly" } })
        @Html.CustomTextboxFor(model => model.PositionOldName, null, null, WidthType.span12, true, new Dictionary<string, object> { { "readonly", "readonly" } })

    </div>
    <div class="col-sm-5">
        @Html.CustomTextAreaFor(model => model.Reason, null, WidthType.span12)
        @Html.CustomDropDownListFor(model => model.BranchIdNew, SelectListHelper.GetSelectList_Branch(null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
        @Html.CustomDropDownListFor(model => model.BranchDepartmentNewId, SelectListHelper.GetSelectList_BranchDepartment(null, Model.BranchIdNew.Value, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
        @Html.CustomDropDownListFor(model => model.PositionNew, SelectListHelper.GetSelectList_Category("position", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)

    </div>

 using (Html.BeginButtonContainer(pageSetting))
    {
    <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
        <i class="ace-icon fa fa-save"></i>
        @Wording.Save
    </button>
    }
}



@section Scripts {
    <script>
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.StaffId</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }
        });
        //Fetch Department of University
        var urDepartmentl = '/api/BackOfficeServiceAPI/FetchBranchDepartment';
        var department = $('#BranchDepartmentNewId'); // cache it

        $("#BranchIdNew").change(function () {
            department.empty(); // remove any existing options
            $(document.createElement('option'))
                        .attr('value', '')
                        .text('- Rỗng -')
                        .appendTo(department).trigger('chosen:updated');
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            $.getJSON(urDepartmentl, { BranchId: id }, function (response) {
                department.empty(); // remove any existing options

                $(response).each(function () {
                    $(document.createElement('option'))
                        .attr('value', this.Id)
                        .text(this.Staff_DepartmentId)
                        .appendTo(department).trigger('chosen:updated');
                });
            });
        });
</script>
    @Html.ScriptBottom_ValidationMvc()
@Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()
}
