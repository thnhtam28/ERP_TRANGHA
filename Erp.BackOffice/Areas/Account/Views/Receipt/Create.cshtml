@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Account.Models

@model ReceiptViewModel

@{
    ViewBag.Title = Wording.PageCreate_Receipt;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Receipt",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    var BranchId = Erp.BackOffice.Helpers.Common.CurrentUser.BranchId;
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}
@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Create", "Receipt", null, FormMethod.Post, new { id = "CreateReceipt", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />

    @*@Html.CustomDropDownListFor(model => model.Name, SelectListHelper.GetSelectList_Category("receipt_Category", null, "- Chọn loại khoản mục -"), WidthType.span6, true, null, DropdownListStyle.DropdownListStyleChosen)*@
    @*@Html.DateInput(model => model.VoucherDate, "dd/MM/yyyy", "99/99/9999", true, WidthType.span12)*@
    <div class="control-group form-group">
        <label class="control-label no-padding-right control-label col-lg-5 col-md-4 col-sm-4" for="VoucherDate">Ngày chứng từ</label>
        <div class="control-value col-lg-7 col-md-8 col-sm-8">
            <div class="clearfix">

                <div class="input-group date" id="VoucherDateId">
                    <input class="form-control" data-val="true" data-val-date="The field Ngày bắt đầu must be a date." data-val-required="Bắt buộc nhập" id="VoucherDate" name="VoucherDate" style="width:150px" type="text" value="" aria-required="true" aria-describedby="VoucherDate-error" aria-invalid="false" autocomplete="off">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#VoucherDateId').datetimepicker({
                            format: 'DD-MM-YYYY HH:mm:ss',
                            defaultDate: moment(),
                            sideBySide: true
                        });
                    });
                </script>
            </div>
            <div class="clearfix">
                <span class="help-inline field-validation-valid" data-valmsg-for="VoucherDate" data-valmsg-replace="true"></span>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.Status)


    @*<div id="MaDonHang" class=" clearfix">
            <div class="control-group form-group">
                <label class="control-label col-lg-5 col-md-4 col-sm-4" for="">Chi Nhánh</label>
                <div class="control-value col-lg-7 col-md-8 col-sm-8" style="line-height:0px!important">
                    <div class="input-group">
                        @Html.DropDownList("BranchId", SelectListHelper.GetSelectList_Branch(Request["BranchId"], "Chi nhánh"))
                        <a class="btn btn-mini btn-white" style="height:30px!important;margin-top:-2px;width:15%;line-height:27px" onclick="return ProductInvoicePopupFilter();"
                           data-rel="tooltip" title="" data-placement="bottom" data-original-title="Tìm kiếm Mã đơn hàng">
                            <i class="fa fa-search"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>*@

    <div id="customer" class=" clearfix">
        <div class="control-group form-group">
            <label class="control-label col-lg-5 col-md-4 col-sm-4" for="">Đối tượng</label>
            <div class="control-value col-lg-7 col-md-8 col-sm-8" style="line-height:0px!important">
                <div class="input-group">
                    @Html.TextBox("TargetCustomer", Model.CompanyName, new { style = "width:85%", @readonly = "readonly" })
                    <a class="btn btn-mini btn-white" style="height:30px!important;margin-top:-2px;width:15%;line-height:27px" onclick="return Timkiemmadonhang();"
                       data-rel="tooltip" title="" data-placement="bottom" data-original-title="Tìm kiếm khách hàng">
                        <i class="fa fa-search"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div id="MaDonHang" class=" clearfix">
        <div class="control-group form-group">
            <label class="control-label col-lg-5 col-md-4 col-sm-4" for="">Mã đơn hàng</label>
            <div class="control-value col-lg-7 col-md-8 col-sm-8" style="line-height:0px!important">
                <div class="input-group">
                    @Html.TextBox("MaChungTuGoc", Model.MaChungTuGoc, new { style = "width:85%", @readonly = "readonly" })
                    <a class="btn btn-mini btn-white" style="height:30px!important;margin-top:-2px;width:15%;line-height:27px" onclick="return ProductInvoicePopupFilter();"
                       data-rel="tooltip" title="" data-placement="bottom" data-original-title="Tìm kiếm Mã đơn hàng">
                        <i class="fa fa-search"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    @Html.CustomTextboxFor(model => model.Payer, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span12)

    <div id="" class="control-group form-group">
        <label class="control-label col-lg-5 col-md-4 col-sm-4">Tiền còn nợ</label>
        <div class="control-value col-lg-7 col-md-8 col-sm-8">
            <div class="clearfix">
                <input class="numberinput2 col-sm-12 text-right" id="RemainingAmount" name="RemainingAmount" type="text" value="" readonly>
            </div>
        </div>
    </div>
    <div id="" class="control-group form-group">
        <label class="control-label col-lg-5 col-md-4 col-sm-4">@Wording.Amount</label>
        <div class="control-value col-lg-7 col-md-8 col-sm-8">
            <div class="clearfix">
                <input class="numberinput2 col-sm-12 text-right" id="Amount" name="Amount" type="text" value="@Model.Amount">
            </div>
        </div>
    </div>
    @*@Html.CustomTextboxFor(model => model.Amount, null, null, WidthType.span12)*@
    @Html.CustomDropDownListFor(model => model.PaymentMethod, SelectListHelper.GetSelectList_Category("FormPayment", null, "Name", Wording.Empty), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleDefault)
    @*<div class="bank-container" style="display:none">
            @Html.CustomTextboxFor(model => model.BankAccountNo, null, null, WidthType.span6)
            @Html.CustomTextboxFor(model => model.BankAccountName, null, null, WidthType.span6)
            @Html.CustomTextboxFor(model => model.BankName, null, null, WidthType.span6)
        </div>*@
    @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
    @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12)
    @*@Html.CustomDropDownListFor(model => model.SalerId, SelectListHelper.GetSelectList_FullUserName(null, Wording.Empty), WidthType.span6, true, null, DropdownListStyle.DropdownListStyleChosen)*@
    using (Html.BeginButtonContainer(pageSetting))
    {
        <a class="btn btn-mini btn-primary" id="Save" name="Save" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </a>
    }
}

@section Scripts {
    <script type="text/javascript">
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Name</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }
        });

        $(function () {
            //$('#Amount').numberFormat();
            LoadNumberInput();
            $('#Save').click(function () {
                var TargetCustomer = $('#TargetCustomer').val();
                var MaChungTuGoc = $('#MaChungTuGoc').val();
                var Amount = $('#Amount').val();
                if (TargetCustomer == "" || MaChungTuGoc == "")
                {
                    alertPopup("Lỗi", "Chưa chọn đối tượng hoặc mã đơn hàng", "warning");
                    return false;
                }
                if (Amount == "")
                {
                    alertPopup("Lỗi", "Chưa nhập số tiền", "warning");
                    return false;
                }
                ShowLoading();
                ClearFormatBeforeSubmit($("#CreateReceipt"));
                $("#CreateReceipt").submit();
                HideLoading();
            });
            //$('#PaymentMethod').change(function () {
            //    if ($(this).val() == "Chuyển khoản") {
            //        $('.bank-container').show();
            //    }
            //    else {
            //        $('.bank-container').hide();
            //        $('#BankAccountNo').val('');
            //        $('#BankAccountName').val('');
            //        $('#BankName').val('');
            //    }
            //});
        });
        $('#BranchId').val(@BranchId)
        function selectItem_Customer(id, code, name) {
            $("#TargetCustomer").val(name);
            $("#CustomerId").val(id);
            ClosePopup();
        }

        function ProductInvoicePopupFilter() {
            var TargetId = $("#CustomerId").val();
            OpenPopup('/ProductInvoice/IndexSearch?IsPopup=true&module_list=Receipt&checktrang=Receipt&jsCallback=selectItemCustomer&TargetId=' + TargetId, 'Tìm kiếm dữ liệu', 800, 600);
        }
        function Timkiemmadonhang() {
            $("#MaChungTuGoc").val('');      
            $("#RemainingAmount").val('');
            OpenPopup('/Customer/IndexSearch?IsPopup=true', 'Tìm kiếm dữ liệu', 800, 600);
        }
        //tiền tệ format
        function currencyFormatDE(num) {
            return (
                num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1.')
            ) // use . as a separator
        }

        function selectItemCustomer(id, name, customername, customerid, status, tongconno) {
            $("#MaChungTuGoc").val(name);
            $("#TargetCustomer").val(customername)
            $("#CustomerId").val(customerid)
            $("#Status").val(status);
            $("#RemainingAmount").val(currencyFormatDE(tongconno));

            console.log('name:' + customername);
            console.log('id:' + id);
            console.log('customerId:' + customerid);
            console.log('status:' + status);
            console.log('Amount:' + tongconno);
            ClosePopup();
        }
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()
    @Html.ScriptBottom_RequireEitherInput()
    @Html.ScriptBottom_InputMask()
}
