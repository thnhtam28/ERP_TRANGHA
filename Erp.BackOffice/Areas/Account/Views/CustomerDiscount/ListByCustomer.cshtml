@model IEnumerable<CustomerDiscountViewModel>

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Account.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html

@{
    ViewBag.Title = Wording.PageIndex_Contact;
    Layout = null;
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

@helper GridColumnCommand(int id)
{
    <div class="hidden-phone visible-desktop action-buttons" style="display: inline-block; float: left;">
        <p style="margin:0">
            @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "CustomerDiscount", "Account"))
            {
                <button name="DeleteCustomerDiscount" value="@id" type="submit" class="btn btn-mini btn-danger">
                    <i class="ace-icon fa fa-trash bigger-120"></i>
                </button>
            }
        </p>
    </div>
}

@helper GridColumnName(string name, int id)
{
    name = string.IsNullOrEmpty(name) == false ? name : "No Title";
    <a href="javascript:;" onclick="OpenPopup('/CustomerDiscount/Edit?IsPopup=true&Id=@id', 'Cập nhật chiết khấu', 1000, 500)">@name</a>
}

@helper CheckDeleteColumns(int Id)
{
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}

@helper GridColumnStatusEdit(bool? status, int? id)
{
    <label class="edit-inline-on-table-2" data-id="@id" data-value="@(status == null ? 0 : (status == true ? 1 : 0))" data-dropdown="/1#Đang chạy|0#Đang dừng/">@(status == true ? "Đang chạy" : "Đang dừng")</label>
}

@using (Html.BeginForm("Delete", "CustomerDiscount", FormMethod.Post))
{
    <p>
        @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "CustomerDiscount", "Account"))
        {
            @Html.Button(Wording.CreateNew, ButtonType.aTag, ButtonColor.Info, ButtonSize.Mini, true, IconType.Plus, IconSize.Default, false, new { @href = "#", onclick = "OpenPopup('/CustomerDiscount/Create?IsPopup=true&CustomerId=" + ViewBag.CustomerId + "', 'Tạo mới chiết khấu', 1000, 500)" })
        }
        @*<button name="DeleteAll" value="DeleteAll" type="submit" class="btn btn-mini btn-danger" onclick="return CheckIsval();">
                <i class="ace-icon fa fa-trash bigger-120"></i>
                @Wording.Delete
            </button>*@
    </p>

    <div class="table-responsive">
        @Html.Grid(Model).Columns(columns =>
        {
            //columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(20).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
            columns.Add(u => u.Code).Titled(Wording.Code).SetWidth(100);
            columns.Add().Titled(Wording.Name).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Name, u.Id));
            columns.Add(u => u.ValuePercent).Titled(Wording.PercentOfCommision).SetWidth(100).Css("text-right");
            //columns.Add(u => u.EndDate).Titled(Wording.EndDate).Format("{0:dd/MM/yyyy}").SetWidth(100);
            //columns.Add(u => u.StartDate).Titled(Wording.StartDate).Format("{0:dd/MM/yyyy}").SetWidth(100);
            columns.Add(u => u.IsActive).Titled(Wording.Status).SetWidth(120).Sanitized(false).Encoded(false).RenderValueAs(n => GridColumnStatusEdit(n.IsActive, n.Id));
            columns.Add(u => u.CreatedDate).Titled(Wording.CreatedDate).SetWidth(160);
            columns.Add(u => u.ModifiedDate).Titled(Wording.ModifiedDate).SetWidth(160);
            columns.Add(u => u.Id).Titled(Wording.Action).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(20);
        }).WithPaging(20)
    </div>
}


<script type="text/javascript">

    $('button[name="DeleteCustomerDiscount"]').click(function () {
        var id = $(this).val();
        if (confirm('Bạn có chắc muốn xóa chiết khấu này ?')) {
            $.get('/CustomerDiscount/Delete', { id: id, IsAjax: 'ajax' }, function (res) {
                if (res == 'success') {
                    ShowLoading();
                    location.reload();
                }
                else
                    alert('error');
            });
            return false;
        }
        else {
            return false;
        }

    });

    $(document).ready(function () {
        $('.edit-inline-on-table-2').editInlineInputTable({ id: null, url: '/CustomerDiscount/EditInline', dataId: 'id' });
    });

</script>
