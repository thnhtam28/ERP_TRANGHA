@model Erp.BackOffice.Account.Models.CustomerViewModel

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Sale.Models
@using Erp.BackOffice.Helpers
@using Erp.Domain.Account.Entities
@using Erp.Domain.Sale.Entities
@using GridMvc.Html

@{
    if (ViewBag.IsNullLayOut == true)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    }
    ViewBag.Title = "Thông tin chi tiết khách hàng";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Customer",
        ActionName = "DetailSearch",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = Request["IsDetailChart"] != null ? false : true,
    };

    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    int rowNumber = 0;
    int numberOfItem = 10;
    IEnumerable<ProductInvoiceViewModel> serviceInvoice = (IEnumerable<ProductInvoiceViewModel>)ViewBag.service;

    IEnumerable<LogVipViewModel> serviceLogVip = (IEnumerable<LogVipViewModel>)ViewBag.serviceLogVip;
    IEnumerable<LogVipViewModelCrm> ListLogVipViewModelCrm = (IEnumerable<LogVipViewModelCrm>)ViewBag.ListLogVipViewModelCrm;

    ///
    IEnumerable<SelectListItem> CustomerGroupList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("CustomerGroup", null, "value");
    IEnumerable<SelectListItem> CustomerTypeList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("CustomerType", null, "value");
    IEnumerable<SelectListItem> EconomicStatusList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("EconomicStatus", null, "value");
    IEnumerable<SelectListItem> SkinLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("skinLevel", null, "value");
    IEnumerable<SelectListItem> HairlLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("hairLevel", null, "value");
    IEnumerable<SelectListItem> GladLevel = Erp.BackOffice.Helpers.Common.GetSelectList_Category("gladLevel", null, "value");
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>
<style>
    .img_user {
        width: 40px !important;
        height: 40px !important;
        margin: 0 auto;
        /* display: block; */
        border-radius: 100%;
        border: 2px solid;
    }

    .user_check {
        width: 30px !important;
    }
</style>

@helper GridColumnName(string name, int id)
{
    name = string.IsNullOrEmpty(name) ? "No Title" : name;
    <a href="@Url.Action("UsingServiceLog", "Service", new {area="Sale", Id = id })">@name</a>

}

@helper GridColumnStaffName(int? userId)
{
    var staff = Common.GetStaffByUserId(userId.Value);
    <span>@(staff != null ? staff.Name : "-")</span>
}

@if (ViewBag.IsNullLayOut != true)
{
    using (Html.BeginPageHeaderContainer(pageSetting))
    {
    }
}
@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

<div class="row">
    <div class="col-sm-7">
        <h4 class="green">
            Khách hàng: @Model.CompanyName - (@Model.Id)
            <a class="btn btn-sm btn-white btn-primary pull-right red" onclick="OpenPopup('@Url.Action("LiabilitiesDetail", "TransactionLiabilities", new { TargetModule = "Customer", TargetCode = Model.Code, TargetName = Model.CompanyName, popup = true })', 'Chi tiết công nợ', 0, 500)">
                <b>Công nợ: @(Model.Liabilities >= 0 ? Common.PhanCachHangNgan2(Model.Liabilities) : "-" + Common.PhanCachHangNgan2(Math.Abs(Model.Liabilities)))</b>
            </a>
        </h4>
        <div class="tabbable top-10">
            @*<ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer1">
                    @*<li id="tab_li_1" class="active">
                    <a data-toggle="tab" href="#tab_1">Số lần sử dụng dịch vụ</a>
                </li>*@
            @*<li id="tab_li_2" class="active">
                        <a data-toggle="tab" href="#tab_2">Lịch sử hóa đơn</a>
                    </li>
                    <li id="tab_li_2" class="active">
                        <a data-toggle="tab" href="#tab_2">Lịch sử hóa đơn</a>
                    </li>
                </ul>*@

            <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer1">
                <li id="tab_li_HD">
                    <a data-toggle="tab" href="#tab_HD">Lịch sử hoá đơn</a>
                </li>
                <li id="tab_li_XH">
                    <a data-toggle="tab" href="#tab_XH">Lịch sử xếp hạng</a>
                </li>
               <li id="tab_li_NV">
                    <a data-toggle="tab" href="#tab_NV">Nhân viên quản lý</a>
               </li>
                <li id="tab_li_GT">
                    <a data-toggle="tab" href="#tab_GT">Khách hàng giới thiệu</a>
                </li>
            </ul>

            <div class="tab-content">
                @*<div class="tab-pane active clearfix" id="tab_1">
                        @{Html.RenderAction("UsingService", "Service", new { area = "Sale", CustomerId = Model.Id, popup = true, IsNullLayOut = true });}
                    </div>*@
                <div class="tab-pane  clearfix" id="tab_HD">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:130px">Ngày chứng từ</th>
                                    <th style="width:110px">Mã chứng từ</th>
                                    <th style="width:180px">Nhân viên lập phiếu</th>
                                    <th style="width:100px">Số tiền</th>
                                    <th>Chi nhánh</th>
                                    <th>Còn nợ</th>
                                </tr>
                            </thead>
                            <tbody class="detailList">                               
                                @foreach (var i in serviceInvoice)
                                {
                                    <tr>
                                        <td>@i.CreatedDate.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td class="has-error">

                                            @if (Request["IsDetailChart"] == null || Request["IsDetailChart"] != "true")
                                            {
                                                <a href="@Url.Action("Detail", "ProductInvoice", new { area = "Sale", Id = i.Id })">@i.Code</a>
                                            }
                                            else
                                            {
                                                <a href="@Url.Action("Detail", "ProductInvoice", new { area = "Sale", Id = i.Id, IsPopUp= true, IsChart = true })">@i.Code</a>
                                            }
                                        </td>
                                        <td>@i.StaffCreateName</td>
                                        <td class="text-right">@Common.PhanCachHangNgan2(i.TotalAmount)</td>
                                        <td>@i.BranchName</td>
                                        <td class ="text-right">                                        
                                            @CommonSatic.ToCurrencyStr(i.TongConNo, null)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>

                <div class="tab-pane active clearfix" id="tab_XH">
                    @*<div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width:130px">Năm</th>
                                        <th style="width:110px">Xếp hạng</th>
                                    </tr>
                                </thead>
                                <tbody class="detailList">
                                    @foreach (var i in serviceLogVip)
                                    {
                                        <tr>
                                            <td>@i.Year</td>
                                            <td>@i.Ratings</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>*@
                </div>

                    <div class="tab-pane active clearfix" id="tab_LH">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width:130px">Hoạt động</th>
                                        <th style="width:110px">Mô tả</th>
                                        <th style="width:180px">Thời gian hẹn</th>
                                        <th style="width:80px">Hoàn thành</th>
                                    </tr>
                                </thead>
                                <tbody class="detailList">

                                    @if (ViewBag.ListLogVipViewModelCrm != null)
                                {
                                    foreach (var i in ListLogVipViewModelCrm)
                                    {
                                <tr>
                                    <td>@i.Chude</td>
                                    <td>@i.Mota</td>
                                    <td>@i.Thoigianhen</td>
                                    <td>@i.Hoanthanh</td>
                                </tr>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>

                    </div>

                <div class="tab-pane clearfix" id="tab_NV">
                    @Html.Grid(Model.CustomerUserList).Columns(columns =>
                   {
                       columns.Add().Titled("#").SetWidth(20).RenderValueAs(o =>
                       {
                           rowNumber++;

                           return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
                       });
                       columns.Add(u => u.FullName).Titled(Wording.FullName).Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);
                       columns.Add(u => u.StartDate).Format("{0:dd/MM/yyyy}").Titled(Wording.StartDate).SetWidth(100);
                       columns.Add(u => u.EndDate).Format("{0:dd/MM/yyyy}").Titled(Wording.EndDate).SetWidth(100);
                   }).WithPaging(10)
                </div>
                <div class="tab-pane clearfix" id="tab_GT">
                    @Html.Grid(Model.CustomerRecommendList).Columns(columns =>
                   {
                       columns.Add().Titled("#").SetWidth(20).RenderValueAs(o =>
                       {
                           rowNumber++;

                           return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
                       });
                       columns.Add(u => u.FullName).Titled(Wording.FullName).Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);
                       columns.Add(u => u.Code).Titled(Wording.FullName).Sortable(false).Sanitized(false).Encoded(false).SetWidth(130);
                       columns.Add(u => u.StartDate).Format("{0:dd/MM/yyyy}").Titled(Wording.StartDate).SetWidth(100);
                       //columns.Add(u => u.EndDate).Format("{0:dd/MM/yyyy}").Titled(Wording.EndDate).SetWidth(100);
                   }).WithPaging(10)
                </div>




                </div>
        </div>
    </div>
    <div class="col-sm-5">
        <div class="tabbable">
            <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="tabCustomer">
                <li>
                    <a data-toggle="tab" href="#tab1">Thông tin khách hàng</a>
                </li>

                <li>
                    <a data-toggle="tab" href="#tab2">@Wording.ResidenceInfo</a>
                </li>
                <li id="li-tab3" class="active">
                    <a data-toggle="tab" href="#tab3">Đánh giá khách hàng</a>
                </li>
            </ul>

            <div class="tab-content clear-fix">
                <div id="tab1" class="tab-pane">
                   <div class="row truoc">
                        <div class="col-sm-10">
                            @{
                                var htmlAttributes = new Dictionary<string, object>
                                                                                                                                  {
                                                                                                                                    { "class" , "form-control"},
                                                                                                                                    { "placeholder", "ID CRM" }
                                                                                                                                  };
                                htmlAttributes.Add("disabled", "disabled");
                                var htmlAttributes2 = new Dictionary<string, object>
                                                                                                                                  {
                                                                                                                                    { "class" , "form-control"},

                                                                                                                                  };
                                htmlAttributes2.Add("disabled", "disabled");

                            }
                            <div style="">
                            @Html.CustomDropDownListFor(model => model.BranchId, SelectListHelper.GetSelectList_Branch(Model.BranchId, Wording.Empty), htmlAttributes2)
                            @Html.CustomTextboxFor(model => model.FirstName, null, null, WidthType.span12, true, htmlAttributes2)
                            
                        </div>
                            
                       
                        </div>
                        <div class="col-sm-2 ">
                            @*<div class="wrap-btn-upload">

                <input type="file" id="file-image" name="file-image" class="file-image" onchange="previewFileImage(event, '#display-image img')" />
            </div>*@
                            <div class="text-center" id="display-image">
                                <img class="avt" style="float:right;" src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image, "Customer", "user"))" width="250" height="300" title="@Model.CompanyName" id="" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 sau">
                           
                            <div style="">
                                @Html.CustomTextboxFor(model => model.LastName, null, null, WidthType.span12, true, htmlAttributes2)
                                @Html.CustomDropDownListFor(model => model.ManagerStaffId, SelectListHelper.GetSelectList_User(Model.FullName, Wording.Empty), htmlAttributes2)
                                @Html.CustomDropDownListFor(model => model.NhomHuongDS, SelectListHelper.GetSelectList_User_kd(Model.FullName, Model.BranchId.ToString()), htmlAttributes2)
                                @Html.DateInput(model => model.Birthday, "dd/MM/yyyy", "99/99/9999", true, WidthType.span12)
                                @Html.CustomDropDownListFor(model => model.Gender, SelectListHelper.GetSelectList_Gender(Model.Gender), htmlAttributes2)
                                @Html.CustomTextboxFor(model => model.Note, null, null, WidthType.span12, true, htmlAttributes2)
                                @Html.CustomTextboxFor(model => model.cus_crm, null, null, WidthType.span12, true, htmlAttributes)
                            </div>


                        </div>
                    </div>
                </div>

                <div id="tab2" class="tab-pane">
                    <div class="">
                        @Html.CustomDropDownListFor(model => model.CityId, SelectListHelper.GetSelectList_Location("0", Model.CityId, Wording.Empty), htmlAttributes2)
                        @Html.CustomDropDownListFor(model => model.DistrictId, SelectListHelper.GetSelectList_Location(Model.CityId, Model.DistrictId, Wording.Empty), htmlAttributes2)
                        @Html.CustomDropDownListFor(model => model.WardId, SelectListHelper.GetSelectList_Location(Model.DistrictId, Model.WardId, Wording.Empty), htmlAttributes2)
                        @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span12, true, htmlAttributes2)
                        @Html.CustomTextboxFor(model => model.Phone, null, null, WidthType.span12, true, htmlAttributes2)
                        @Html.CustomTextboxFor(model => model.Mobile, null, null, WidthType.span12, true, htmlAttributes2)

                        @Html.CustomTextboxFor(model => model.Email, null, null, WidthType.span12, true, htmlAttributes2)
                    </div>
                </div>
                <div id="tab3" class="tab-pane in active">
                    @Html.CustomDropDownListFor(model => model.CustomerGroup, CustomerGroupList,htmlAttributes2)
                    @Html.CustomDropDownListFor(model => model.CustomerType, CustomerTypeList, htmlAttributes2)

                    @Html.CustomDropDownListFor(model => model.EconomicStatus, EconomicStatusList, htmlAttributes2)
                    @*@Html.CustomDropDownListFor(model => model.EconomicStatus, SelectListHelper.GetSelectList_Category(Model.EconomicStatus, null, "value"), null, null)*@




                    @Html.CustomDropDownListFor(model => model.SkinSkinLevel, SkinLevel, htmlAttributes2)
                    @Html.CustomDropDownListFor(model => model.HairlLevel, HairlLevel, htmlAttributes2)
                    @Html.CustomDropDownListFor(model => model.GladLevel, GladLevel, htmlAttributes2)
                 
                    @Html.CustomSwitchesFor(model => model.KhCuMuonBo, SwitchesStyle.CheckboxStyle, true)
                    @Html.CustomSwitchesFor(model => model.KhCuThanPhien, SwitchesStyle.CheckboxStyle, true)
                    @Html.CustomSwitchesFor(model => model.KhLauNgayKhongTuongTac, SwitchesStyle.CheckboxStyle, true)
                    @Html.CustomSwitchesFor(model => model.KhMoiDenVaHuaQuaiLai, SwitchesStyle.CheckboxStyle, true)
                    @Html.CustomSwitchesFor(model => model.KhMoiDenVaKinhTeYeu, SwitchesStyle.CheckboxStyle, true)        
                    @Html.CustomSwitchesFor(model => model.IsBonusSales, SwitchesStyle.CheckboxStyle, true)
                    @Html.CustomSwitchesFor(model => model.isLock, SwitchesStyle.CheckboxStyle, true)
                    

                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginButtonContainer(pageSetting))
{
    if (Request["IsDetailChart"] == null || Request["IsDetailChart"] != "true")
    {
        if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("EditNT", "Customer", "Account"))
        {
            <a class="btn btn-mini btn-primary" href="@Url.Action("EditNT", pageSetting.ModuleName, new { Id = Model.Id })">
                <i class="ace-icon fa fa-edit"></i>
                @Wording.Edit
            </a>
        }
    }
    //if (Model.IsActived != true)
    // {
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "AdviseCard", "Sale"))
    {
        @*<a class="btn btn-primary btn-mini" target="_blank" href="@Url.Action("Create", "AdviseCard", new { TargetId = Model.Id, TargetModule="Customer" })">
                <i class="ace-icon fa fa-plus"></i>
                Lập phiếu yêu cầu
            </a>*@
    <a class="btn btn-primary btn-mini" onclick="OpenPopup('@Url.Action("Create", "AdviseCard",new { area="Sale",Id=Model.Id, IsPopup =false})','',0,0)">
        <i class="ace-icon fa fa-plus"></i>
        Lập phiếu tư vấn
    </a>
    }
    //}

}

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-rel=tooltip]').tooltip({ container: 'body' });
        });

        $(function () {
            $('#Amount').numberFormat();
            var amountRemain = 0;
            $('input[type=radio][name=TransactionId]').change(function () {
                //console.log(this.value);
                $('#OriginalTransactionId').val(this.value);
                amountRemain = parseFloat($(this).data("remain"));
                //console.log(amountRemain);
                $('#mask-Amount').val(currencyFormat(amountRemain));
                $('#Amount').val(amountRemain);
                $("#Thanhtoan").show();
                $(".alert-required-transactionId").hide();

                if ($(this).data("hasprocesspayment")) {
                    $('#ProcessPaymentId').val($('.ProcessPaymentId:checked').val());
                    var amount = $('.ProcessPaymentId:checked').data("amount");
                    $('#mask-Amount').val(currencyFormat(amount));
                    $('#Amount').val(amount);

                    $('#mask-Amount').attr('readonly', 'readonly');

                    checkNextPaymentDate();
                    $('#NextPaymentDate').val($(this).data("nextpaymentdate"));
                    $('#NextPaymentDate').attr('readonly', 'readonly');
                }
                else {
                    $('#ProcessPaymentId').val(0);
                    $('#mask-Amount').removeAttr('readonly');
                    $('#NextPaymentDate').removeAttr('readonly');
                }
            });

            $('#usingservice').show();
            $('#mask-Amount').blur(function () {
                checkNextPaymentDate();
            });

            $('#mask-Amount').focus(function () {
                $(this).select();
            });

            $('#mask-Amount').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                }
            });

            function checkNextPaymentDate() {
                if (parseFloat($('#Amount').val()) < amountRemain) {
                    $('.NextPaymentDate-container').show();
                    $('#AmountRemain').val(currencyFormat(amountRemain - parseFloat($('#Amount').val())));
                }
                else {
                    $('.NextPaymentDate-container').hide();
                }
            }
        });

        function ResolveLiabilities_OnSuccess(rs) {
            location.reload();
        }

        function checkOnSubmit() {
            if ($('#OriginalTransactionId').val() == '') {
                $(".alert-required-transactionId").show();
                return false;
            }
            else {
                $(".alert-required-transactionId").hide();
                return true;
            }
        }
        //đóng thẻ div tập tin
        function AllowClose() {
            $("#Thanhtoan").hide();
        }

        document.getElementById("showTakePhotoForm").onclick = function () {
            var checkbox = document.getElementsByName("UserId");
            for (var i = 0; i < checkbox.length; i++) {
                if (checkbox[i].checked === true) {
                    //alert(checkbox[i].value);
                    $("#modalPayment").modal("hide");
                    OpenPopup('@Url.Action("TakePhoto", "Customer", new {Id = Model.Id })?UserId=' + checkbox[i].value + '&IsPopup=true', 'Chụp hình khách hàng', 0, 420);
                }
            }
        };
        function clickActive(elem, id) {
            //  console.log(1111);
            var $this = $(elem);

            var $chekbox = $this.find('input[type="checkbox"]');
            var $label = $this.find('label[name="label_' + id + '"]');
            if ($chekbox.is(':checked')) {
                $chekbox.prop('checked', false);
                $label.removeClass('active');
            } else {
                $chekbox.prop('checked', true);
                $label.addClass('active');
            }
            //$('span[id="count_check_' + id + '"]').text($this.parent().find(' > label.active').length);
        }

    </script>

    <script src="~/Scripts/jquery.signalR-2.2.1.min.js" type="text/javascript"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">
        $(function () {
            var erpHub = $.connection.erpHub;

            // Start the connection.
            $.connection.hub.start().done(function () {

            });

            $('#myModal').on('hidden.bs.modal', function () {
                var checkbox = document.getElementsByName("UserId");
                for (var i = 0; i < checkbox.length; i++) {
                    if (checkbox[i].checked === true) {
                        erpHub.server.loadUrl('/Customer/Client', checkbox[i].value);
                    }
                }
            });
        });
        $(function () {
            enable_cb();
            $(".name").click(enable_cb);
        });

        function enable_cb() {
            $(".ace").prop("disabled", !this.checked);
            $("#Birthday").prop("disabled", !this.checked);
        }



    </script>

    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
}


