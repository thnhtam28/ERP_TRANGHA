@model List<Erp.Domain.Account.Entities.vwAccount_Liabilities>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.min.js"></script>
@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Account.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html

@{
    bool isPopup = Request["popup"] != null && Request["popup"].ToString().ToLower() == "true" ? true : false;
    if (isPopup)
    {
        Layout = "~/Views/Shared/_PopupLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    }

    string TargetModuleName = "Khách hàng";

    int rowNumber = 0;
    int numberOfItem = 10;
    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    var Sum = ViewBag.SumCongNo;
    var sDate = Request["startDate"];

    ViewBag.Title = "Công nợ " + TargetModuleName;

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "TransactionLiabilities",
        ActionName = "LiabilitiesCustomer",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false
    };
}

@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>

@helper GridColumnName(string TargetModule, string TargetCode, string TargetName, bool isPopup)
{
    if (isPopup)
    {
        <a onclick="parent.selectBranchItem(@TargetCode)">@TargetName</a>
    }
    else
    {
        <a onclick="OpenPopup('@Url.Action("LiabilitiesDetail", "TransactionLiabilities", new { TargetModule = TargetModule, TargetCode = TargetCode, TargetName = TargetName, popup = true })', 'Chi tiết công nợ', 0, 500)">@TargetName</a>
    }
}

@helper GridColumnCategoryValue(object value)
{
    var attr = Erp.BackOffice.Helpers.Common.GetCategoryByValueOrId("value", value);
    <span>@(attr != null ? attr.Name : "")</span>
}

@helper CheckDeleteColumns(int Id)
{
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{
    <p>
        <input type="hidden" value="@Request["popup"]" name="popup" />
        <input type="hidden" value="@Request["TargetType"]" name="TargetType" />


        @*@Html.TextBox("TargetCode", Request["TargetCode"], new { @class = "form-control", autocomplete = "off", placeholder = "Mã " + TargetModuleName })
        @Html.TextBox("TargetName", Request["TargetName"], new { @class = "form-control", autocomplete = "off", placeholder = "Tên " + TargetModuleName })*@
        @Html.TextBox("TargetSearch",Request["TargetSearch"],new {@class="form-control",autocomplete="off",placeholder="Mã hoặc Tên " + TargetModuleName})

        <span class="input-daterange input-group">
            @Html.TextBox("startDate", Request["startDate"] != null ? Request["startDate"] : "", new { autocomplete = "off", placeholder = "Ngày ghi sổ từ..." })
            <span class="input-group-addon">
                <i class="fa fa-exchange"></i>
            </span>
            @Html.TextBox("endDate", Request["endDate"] != null ? Request["endDate"] : "", new { autocomplete = "off", placeholder = "đến ngày..." })
        </span>
    </p>
    <script>

                          $('.input-daterange').datepicker({format:'dd/mm/yyyy'}).on('changeDate', function (e) {

                          });
    </script>

    <p>
        <label>


            <input class="ace" type="checkbox" id="AllData" name="AllData" checked="@Request["AllData"]" />
            <span class="lbl">Xem tất cả @TargetModuleName</span>
            <input id="AllData2" type="hidden" value="@Request["AllData"]" />
        </label>
    </p>

}

@using (Html.BeginForm("XuatExcel", pageSetting.ModuleName, FormMethod.Post))
{
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add().Titled("#").SetWidth(50).RenderValueAs(o =>
    {
        rowNumber++;
        return @<text> @(rowNumber + ((currentPage - 1) * numberOfItem)) </text>;
    });
    columns.Add(m => m.TargetCode).Titled("Mã " + TargetModuleName).SetWidth(150);
    columns.Add().Titled("Tên " + TargetModuleName).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.TargetModule, u.TargetCode, u.TargetName, isPopup));
    columns.Add(u => u.CreatedDate).Titled("Ngày tạo").Format("{0:dd/MM/yyyy}").Sortable(true).SetWidth(150);
    columns.Add().Titled("Công nợ hiện tại").SetWidth(150).RenderValueAs(u => Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(u.Remain));
}).WithPaging(100).SetRowCssClasses(u => u.Remain > 0 ? "warning red" : "")

}

@using (Html.BeginButtonContainer(pageSetting))
{
    @*<input type="submit" class="btn btn-white btn-success btn-sm" id="btnExport" value="Xuất Excel" />*@


    <button class="btn btn-white btn-success btn-sm" id="btnSave" value="Cập nhật">
        <i class="ace-icon fa fa-file-excel-o"></i>Xuất excel
    </button>


}

@section Scripts {

    @* <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

            <script src="https://rawgit.com/unconditional/jquery-table2excel/master/src/jquery.table2excel.js"></script>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
        <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>

        <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>*@
    <script type="text/javascript">
        function CheckIsval() {
            if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })

        $(function () {
            var sum = 0;

            $("tr.grid-row").each(function () {
                var tr = $(this);
                var rows = $(tr).children();
                var amount = rows[4].innerHTML;

                amount = amount.replace(/\,/g, '');
                amount = parseFloat(amount);
                //console.log(amount);
                sum += amount;
            });

            //sum = sum.toFixed(2);
            var trTotals = "<tr><td></td><td></td><td></td><td style='color:blue;font-weight:bold;'>Tổng Công Nợ:</td><td style='color:red;font-weight:bold;'>" + currencyFormat(@Sum) + "</td></tr>"
            $("tr.grid-row:last").after(trTotals);
        });


        $(function () {
            $("#btnExport").click(function (e) {
                e.preventDefault();
                $("TABLE").table2excel({
                    filename: "CongNoKhachHang\@DateTime.Now\.xls",
                    //fileext: ".csv"
                });
            });
        });

        $("#btnSave").click(function (event) {
            event.preventDefault();


            /*if (($("#startDate").val() == "") || ($("#endDate").val() == "")) {
                alert("Bạn phải nhập khoảng thời gian cần lấy log");
                return false;
            }
            ShowLoading();
            */


            ShowLoading();
            var url = '@Url.Action("XuatExcel", "TransactionLiabilities", new { @*targetCode = "TargetCode1", targetName = "TargetName1"*@ targetSearch="TargetSearch1", AllData = "AllData1", startDate = "startDate1", endDate = "endDate1" })';
            url = url.replace("startDate1", $("#startDate").val());
            url = url.replace("endDate1", $("#endDate").val());
           // url = url.replace("TargetCode1", $("#TargetCode").val());
            //  url = url.replace("TargetName1", $("#TargetName").val());
            url = url.replace("TargetSearch1", $("#TargetSearch").val());
            url = url.replace("AllData1", $("#AllData2").val());
            url = url.replace(/amp;/g, "");
            var test = document.getElementById("AllData2").value;
            //alert(test);
            //alert("test" , $("#AllData2").val())
            //alert(url); //just for debugging
            window.location.href = url;

            HideLoading()
        });

        /*$("body").on("click", "#btnSave", function () {
            //Loop through the Table rows and build a JSON array.
            //ShowLoading();
            var customers = new Array();
            $("TBODY TR").each(function () {
                var row = $(this);
                var customer = {};
                customer.TargetCode = row.find("TD").eq(1).html();
                customer.TargetName = row.find("TD").eq(2).find("A").html();
                customer.CreatedDate = row.find("TD").eq(3).html();
                customer.Remain = row.find("TD").eq(4).html();
                customers.push(customer);
            });

            $.ajax({
                type: "POST",
                url: "/TransactionLiabilities/XuatExcel",
                data: JSON.stringify(customers),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    location.reload();
                    //HideLoading();
                }
            });

        });
        */



    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/mm/yyyy")
}
