@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model LogPromotionViewModel

@{
    ViewBag.Title = Wording.PageCreate_LogPromotion;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");

    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "LogPromotion",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />

    @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
        @Html.CustomTextboxFor(model => model.ProductInvoiceCode, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.ProductId, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.CommissionCusCode, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.TargetID, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.TargetModule, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.Type, null, null, WidthType.span12)
    @Html.CustomDropDownListFor(model => model.CustomerId, CustomerIdList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
    @Html.CustomDropDownListFor(model => model.BranchId, BranchIdList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
    @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.CommissionValue, null, null, WidthType.span12)
    @Html.CustomTextboxFor(model => model.IsMoney, null, null, WidthType.span12)
    @Html.CustomDropDownListFor(model => model.GiftProductId, GiftProductIdList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
    @Html.CustomDropDownListFor(model => model.DonateProOrSerId, DonateProOrSerIdList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)


    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {    
    <script>
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Name</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()    
    @Html.ScriptBottom_ChosenStyle()
}
