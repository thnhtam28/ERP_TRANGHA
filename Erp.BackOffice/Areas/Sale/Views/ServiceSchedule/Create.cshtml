@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model ServiceScheduleViewModel

@{
    ViewBag.Title = Wording.PageCreate_ServiceSchedule;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "ServiceSchedule",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    string ServiceName = (Request["ServiceName"] == null || Request["ServiceName"] == "SkinScan") ? "SkinScan" : "CheckingHair";

}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{
}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
    <input type="hidden" name="UrlReferrer" value="@Request.UrlReferrer" />
    @Html.CustomDropDownListFor(model => model.BranchId, SelectListHelper.GetSelectList_BranchAll(Model.BranchId, Wording.Empty), null, true, null, DropdownListStyle.DropdownListStyleDefault)
    @Html.ModulePopupFor(m => m.CustomerId, "Customer", Model.CustomerName, false, true)
    @Html.CustomDropDownListFor(model => model.ServiceName,SelectListHelper.GetSelectList_Category("TemplateListVote", ServiceName, null), null, true, null, DropdownListStyle.DropdownListStyleDefault)
    @*@Html.CustomDropDownListFor(model => model.Status, SelectListHelper.GetSelectList_Category("task_status", null, "Value", Wording.Empty), WidthType.span4, DropdownListStyle.DropdownListStyleDefault,true,null)*@
    @Html.DateTimePicker(model => model.StartDate, "dd/MM/yyyy H:mm", "00/00/0000 00:00:00", true, false)
    @Html.DateTimePicker(model => model.DueDate, "dd/MM/yyyy H:mm", "00/00/0000 00:00:00", true, false)
    @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12, true)
    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    <script>
        var urlRefer = '@ViewBag.urlRefer';
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Note</option>';
                //nếu có url thì gọi hàm này để trang ngoài iframe nhảy trang
                if (urlRefer != '') {
                    window.parent.ClosePopupAndRedirectToURL(urlRefer);
                }
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndDoSomething(option);
            }
        });
        $(document).ready(function () {
            $('[data-rel="tooltip"]').tooltip({ container: 'body' });

        });
        function ClosePopupAndReloadPage(id, name) {
            $("#CustomerId").val(id);
            $("#CustomerId_DisplayText").val(name);
            ClosePopup(false);

        }
        $("button[name='Submit']").click(function (e) {
            //kiem tra ngay thang
            debugger
            //ngay bat dau;
            var startDate = $("#StartDate").val().split(" ");

            //cat thoi gian
            var catgio = startDate[1].split(":");
            var gio = catgio[0];
            var phut = catgio[1];
            //cat ngay
            var catthoigian = startDate[0].split("/");
            var catngay = catthoigian[0];
            var catthang = catthoigian[1];
            var catnam = catthoigian[2];
            //ngay ket thuc
            var endDate = $("#DueDate").val().split(" ");
            //cat thoi gian
            var catgio1 = endDate[1].split(":");
            var gio1 = catgio1[0];
            var phut1 = catgio1[1];
            //cat ngay
            var catthoigian1 = endDate[0].split("/");
            var catngay1 = catthoigian1[0];
            var catthang1 = catthoigian1[1];
            var catnam1 = catthoigian1[2];
            //so sanh
            if (catngay > catngay1 || catthang > catthang1 || catnam > catnam1) {
                alertPopup("Lỗi", "Thời Hạn phải lớn hơn ngày Bắt Đầu!!!", "warning");
                return false;
            }
            if (catngay == catngay1 && catthang == catthang1 && catnam == catnam1) {
                if (gio > gio1) {
                    alertPopup("Lỗi", "Thời Hạn phải lớn hơn ngày Bắt Đầu!!!", "warning");
                    return false;
                }
                if (gio == gio1) {
                    if (phut > phut1) {
                        alertPopup("Lỗi", "Thời Hạn phải lớn hơn ngày Bắt Đầu!!!", "warning");
                        return false;
                    }
                }
            }
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()

}
