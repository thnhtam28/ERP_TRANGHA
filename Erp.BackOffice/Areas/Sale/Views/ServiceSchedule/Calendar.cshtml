@model List<ServiceScheduleViewModel>

    @using Erp.BackOffice.App_GlobalResources
    @using Erp.BackOffice.Crm.Models
    @using Erp.BackOffice.Helpers
    @using Erp.BackOffice.Sale.Models
    @using GridMvc.Html
    @using Erp.BackOffice.Areas.Cms.Models
    @{
        ViewBag.Title = "Lịch đặt phục vụ";
        Layout = null;
        List<CategoryViewModel> Category = (List<CategoryViewModel>)ViewBag.Category;
        var quantityDate = Erp.BackOffice.Helpers.Common.GetSetting("quantity_ServiceSchedule_Date");
        var date = DateTime.Now.AddDays(Convert.ToInt32(quantityDate));
        string ServiceName = (Request["ServiceName"] == null || Request["ServiceName"] == "SkinScan") ? "SkinScan" : "CheckingHair";

    }
    <style type="text/css">
            /*.fc-day-grid-event .fc-time {
            display: none;
        }*/

            /*.fc-day-grid-event > .fc-content {
                white-space: normal;
                overflow: auto;
            }*/
            .tab-content {
                padding: 0px 12px !important;
            }

            .itemdiv .tools {
                left: inherit;
                bottom: 0px !important;
            }

            .itemdiv > .body {
                margin-right: 0px !important;
            }

            .popover {
                max-width: 350px !important;
            }

            .badge, .badge-red.label {
                position: initial !important;
            }

            .fc-day-grid-event {
                padding: 1px 1px !important;
            }

            .fc-event {
                border: none !important;
            }

            .btn.btn-white {
                /*border-color: rgba(204, 204, 204, 0)!important;*/
                border-width: 0px !important;
            }

                .btn.btn-white:hover, .btn.btn-white:focus, .btn.btn-white.active,
                .btn.btn-white:active, .open > .btn.btn-white.dropdown-toggle,
                .open > .btn.btn-white.active.dropdown-toggle {
                    background-color: rgba(59, 183, 51, 0.46) !important;
                    border-color: #629959;
                    color: #3a3434 !important;
                }
                .itemdiv > .body > .time{
                    top:-17px !important;
                }
    </style>
    @helper GridColumnTypeName(string ServiceName)
    {
        switch (ServiceName)
        {
            case "SkinScan":
                <span>@Wording.AdviseType_SkinScan</span>
                break;
            case "CheckingHair":
                <span>@Wording.AdviseType_CheckingHair</span>
                break;

        }
    }
    <div class="row">
        <div class="col-sm-5">

            <div class="widget-container-col ui-sortable" id="widget-container-col-10" style="min-height: 108px;">
                <div class="widget-box ui-sortable-handle" id="widget-box-10" style="opacity: 1;">
                    <div class="widget-header widget-header-small">
                        <h5 class="widget-title smaller"><i class="fa fa-bars"></i> DS lịch đặt phục vụ</h5>

                        <div class="widget-toolbar no-border">
                            <ul class="nav nav-tabs" id="myTab">
                                @for (int i = 0; i < Category.Count(); i++)
                                {
                                    var total = Model.Where(x => x.Status == Category[i].Value).ToList().Count();
                                    <li id="li_category_@i">
                                        <a data-toggle="tab" href="#tab_List_Task_@i"><i class="@Category[i].Description"></i> @Category[i].Name <span class="badge badge-danger">@total</span></a>
                                    </li>
                                }

                            </ul>
                        </div>
                    </div>

                    <div class="widget-body">
                        <div class="widget-main">
                            <div class="tab-content">
                                @for (int i = 0; i < Category.Count(); i++)
                                {
                                    var list = Model.Where(x => x.Status == Category[i].Value).ToList();
                                    <div id="tab_List_Task_@i" class="tab-pane">

                                        @*<div class="dialogs ace-scroll">
                                            <div class="scroll-track scroll-active scroll-hover" style="display: block; height: 500px;"><div class="scroll-bar" style="height:5%; top: 0px;"></div></div><div class="scroll-content" style="max-height: 100%;">*@
                                        @foreach (var item in list)
                                        {
                                            var mau = "";
                                            if (item.Status == "pending" || item.Status == "inprogress")
                                            {

                                                if (DateTime.Now <= item.DueDate && item.DueDate <= date)
                                                {
                                                    mau = "#F89406";
                                                }
                                                if (item.DueDate < DateTime.Now)
                                                {
                                                    mau = "#d15b47";
                                                }
                                            }
                                            else
                                            {
                                                mau = "black";
                                            }
                                            <div class="itemdiv commentdiv" id="item_@item.Id" style="padding-top:35px">

                                                <div class="user">
                                                    @*<a data-toggle="tooltip" title="Xem chi tiết" onclick="OpenPopup('@Url.Action("Detail", "Customer", new { area="Account",Id=item.CustomerId, IsPopup = true })', 'Chi tiết khách hàng', 0, 500)">*@
                                                    <img alt="@item.BranchName" src="@item.CustomerImagePath">
                                                    @*</a>*@
                                                </div>

                                                <div class="body">
                                                    <div class="name">
                                                        <div data-toggle="buttons" class="btn-group">
                                                            <label class="btn btn-sm btn-white" data-toggle="tooltip" onclick="clickActive(this, @item.Id)" title="Chọn để tạo đơn hàng" id="label_@item.Id" name="label_@item.Id" style="padding:2px!important;margin-left:2px!important;margin-bottom:2px!important;width:200px">
                                                                <input type="checkbox" value="@item.Id" id="check_@item.Id" name="service_schedule" class="user_check">
                                                                @item.BranchName - @item.CustomerName - @item.NhomHuong
                                                            </label>

                                                        </div>

                                                    </div>

                                                    <div class="time">
                                                        <i class="ace-icon fa fa-clock-o" data-toggle="tooltip" title="Thời gian bắt đầu dự kiến"></i>
                                                        <span style="color:@mau">@item.StartDate.Value.ToString("dd/MM/yyyy HH:mm")</span>

                                                    </div>

                                                    <div class="text">
                                                        <i class="ace-icon fa fa-quote-left"></i>
                                                        Mã đặt trước: @item.Code . Dịch vụ sử dụng: @GridColumnTypeName(item.ServiceName)
                                                        <i class="ace-icon fa fa-quote-right" style="color: #DCE3ED;"></i>
                                                    </div>
                                                </div>
                                                <div class="tools">
                                                    <div class="action-buttons bigger-125" style="padding-bottom:35px">
                                                        <a data-toggle="tooltip" title="Xem chi tiết" onclick="OpenPopup('@Url.Action("Detail", "ServiceSchedule", new { area="Sale",Id=item.Id, IsPopup = true })', 'Chi tiết lịch đặt phục vụ', 900, 500)">
                                                            <i class="ace-icon fa fa-search green"></i>
                                                        </a>
                                                        @if (item.Status == "pending")
                                                        {

                                                            <a data-toggle="tooltip" title="Phân công cho nhân viên" onclick="OpenPopup('@Url.Action("Create", "Task", new { area = "Crm"
                                                                                                                                    
                                                                                                                                    , ParentId = item.Id, IsPopup = true
                                                                                                                                    })', 'Phân công cho nhân viên', 0, 500)">
                                                                <i class="ace-icon fa fa-send-o" style="color:orange"></i>
                                                            </a>
                                                        }
                                                        <a data-toggle="tooltip" title="Cập nhật" onclick="OpenPopup('@Url.Action("Edit", "ServiceSchedule", new { area="Sale",Id=item.Id, IsPopup = true })', 'Cập nhật lịch đặt phục vụ', 900, 500)">
                                                            <i class="ace-icon fa fa-pencil blue"></i>
                                                        </a>
                                                        @if (item.Status == "pending")
                                                        {
                                                            <a onclick="Delete(@item.Id)" data-toggle="tooltip" title="Xóa dòng này">
                                                                <i class="ace-icon fa fa-trash-o red"></i>
                                                            </a>
                                                        }
                                                    </div>
                                                </div>

                                            </div>
                                        }
                                        @*</div>
                                            </div>*@

                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-7">
            <div id="calendar"></div>
        </div>
    </div>
    <script>
    $(document).ready(function () {
        $('[data-rel=popover]').popover({ html: true });
        $('.dialogs,.comments').ace_scroll({
            size: 300
        });
    });
    function EditNote() {
        $('[data-rel=popover]').popover('hide');
    }
    $("#tabs").tabs();
    $(document).ready(function () {
        $('#li_category_0').addClass("active");
        $('#tab_List_Task_0').addClass("active");
    });
    jQuery(function ($) {
        /* initialize the external events
            -----------------------------------------------------------------*/

        $('#external-events div.external-event').each(function () {

            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };

            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });




        /* initialize the calendar
        -----------------------------------------------------------------*/

        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();

        var dataEvents = @Html.Raw(ViewBag.dataEvent);

        var calendar = $('#calendar').fullCalendar({
            //isRTL: true,
            //firstDay: 1,// >> change first day of week


            buttonHtml: {
                prev: '<i class="ace-icon fa fa-chevron-left"></i>',
                next: '<i class="ace-icon fa fa-chevron-right"></i>'
            },

            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            events: dataEvents
            , eventLimitText: "xem thêm",
            locale: 'vi',
            defaultDate: '@ViewBag.aDateTime',
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            eventLimit: true, // allow "more" link when too many events

            selectable: true,
            selectHelper: true,
            select: function (date) {

                OpenPopup('/ServiceSchedule/Create/?date=' + date.format() + '&IsPopup=true', '', 900, 500);

                calendar.fullCalendar('unselect');
            },
            //eventResize: function (event, delta, revertFunc) {

            //    alert(event.title + " end is now " + event.end.format());

            //    if (!confirm("is this okay?")) {
            //        revertFunc();
            //    }

            //},

            //editable: true,
            //droppable: true, // this allows things to be dropped onto the calendar !!!
            //drop: function (date) { // this function is called when something is dropped

            //    // retrieve the dropped element's stored Event Object
            //    var originalEventObject = $(this).data('eventObject');
            //    var $extraEventClass = $(this).attr('data-class');


            //    // we need to copy it, so that multiple events don't have a reference to the same object
            //    var copiedEventObject = $.extend({}, originalEventObject);

            //    // assign it the date that was reported
            //    copiedEventObject.start = date;
            //    copiedEventObject.allDay = false;
            //    if ($extraEventClass) copiedEventObject['className'] = [$extraEventClass];

            //    // render the event on the calendar
            //    // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
            //    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

            //    // is the "remove after drop" checkbox checked?
            //    if ($('#drop-remove').is(':checked')) {
            //        // if so, remove the element from the "Draggable Events" list
            //        $(this).remove();
            //    }

            //}
            //,
            //selectable: true,
            //selectHelper: true,
            //select: function (start, end, allDay) {
            //    //var url = "/ServiceSchedule/Create";
            //    //$.get(url);
            //    //url: '/ServiceSchedule/Create';
            //    //OpenPopup('/ServiceSchedule/Create/?IsPopup=true', 'Thêm Công việc', 900, 500);
            //    //bootbox.prompt("Thêm việc cần làm:", function (title) {
            //    //    if (title !== null) {
            //    //        calendar.fullCalendar('renderEvent',
            //    //            {
            //    //                title: title,
            //    //                start: start,
            //    //                end: end,
            //    //                allDay: allDay,
            //    //                className: 'label-info'
            //    //            },
            //    //            true // make the event "stick"
            //    //        );
            //    //        console.log(start);
            //    //        console.log(title);
            //    //    }

            //    //});

            //    calendar.fullCalendar('unselect');
            //}
            //,
            eventClick: function (calEvent, jsEvent, view) {

                if (calEvent.url) {
                    OpenPopup(calEvent.url + '&IsPopup=true', 'Công việc', 900, 500);
                    return false;
                }
            }
            //,
            //eventAfterAllRender: function (view) {

            //}
        })


    })
    function Delete(id) {
        if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
            ShowLoading();
            $.post("@Url.Action("Delete", "ServiceSchedule", new { area = "Sale" })", { id: id })
        .done(function (data) {
            if (data == "success") {
                $("#item_" + id).closest('div').remove();
            }
            else {
                alertPopup('Lỗi', 'Không thể xóa', 'danger');
            }
            HideLoading();
        });
            return false;
        }
        else {
            return false;
        }
    };

    function clickActive(elem, id) {
        //  console.log(1111);
        var $this = $(elem);

        var $chekbox = $this.find('input[type="checkbox"]');
        var $label = $this.find('label[name="label_' + id + '"]');
        if ($chekbox.is(':checked')) {
            $chekbox.prop('checked', false);
            $label.removeClass('active');
            $('span[id="count_check').text(parseInt($('span[id="count_check').text()) - 1);

        } else {
            $chekbox.prop('checked', true);
            $label.addClass('active');
            $('span[id="count_check').text(parseInt($('span[id="count_check').text()) + 1);

        }
        //$('span[id="count_check_' + id + '"]').text($this.parent().find(' > label.active').length);
    }
    </script>
