@using Erp.BackOffice.App_GlobalResources
@using Erp.Domain.Sale.Entities

@using Erp.BackOffice.Helpers
@using GridMvc.Html

@model IQueryable<vwReportCustomer>

@{
    ViewBag.Title = Wording.ReportReceiptList;
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";


    IEnumerable<SelectListItem> branchList = (IEnumerable<SelectListItem>)ViewBag.branchList;

    string branchId = Request["branch-id"] != null ? Request["branch-id"] : Common.CurrentUser.BranchId + "";

    var branchSelected = branchList.Where(x => x.Value == branchId).FirstOrDefault();
    string branchName = branchSelected == null ? "tất cả" : branchSelected.Text;
    
    
}

<link href="http://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/2013.2.918/styles/kendo.common.min.css" rel="stylesheet" />
<link href="https://kendo.cdn.telerik.com/2015.3.930/styles/kendo.default.min.css" rel="stylesheet" />
<link href="/ReportViewer/styles/telerikReportViewer-9.0.15.225.css" rel="stylesheet" />
<!-- THEMES:  black    blueopal    bootstrap    default    Fiori    Flat    HighContrast    material    MaterialBlack    Metro    MetroBlack    Moonlight    Nova    Office365    Silver    Uniform -->
<!--kendo.all.min.js can be used as well instead of kendo.web.min.js and kendo.mobile.min.js-->

<style>
    #reportViewer1 {
        /*position: absolute;*/
        left: 5px;
        right: 5px;
        top: 120px;
        bottom: 5px;
        overflow: hidden;
        font-family: Verdana, Arial;
        height: 700px;
    }

        #reportViewer1 * {
            -webkit-box-sizing: initial;
            -moz-box-sizing: initial;
            box-sizing: initial;
        }

    .help-inline {
        color: red;
    }
</style>


<div class="page-header">
    <h1>
        @ViewBag.Title
    </h1>
</div>

@using (Html.BeginForm("ReceiptList", "SaleReport", FormMethod.Get, new { @class = "form-search" }))
{
    <div class="clearfix">

        <div class="form-group col-sm-2">
            <div class="row">
                <label class="col-md-12 col-sm-12">@Wording.BranchName</label>
                <div class="col-md-12 col-sm-12">
                    <select class="form-control" name="branch-id">
                        <option value="">- Chọn -</option>
                        @foreach (var item in branchList)
                        {
                            <option @(branchId == item.Value ? "Selected" : "") value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group col-sm-2">
            <div class="row">
                <label class="col-sm-12">@Wording.Month</label>
                <div class="col-sm-12">
                    <select class="form-control" name="month" id="month">
                        <option value="">- chọn -</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option @(Request["month"] == i + "" ? "selected" : "") value="@i">@i</option>
                        }
                    </select>
                    <span class="field-validation-valid help-inline" data-valmsg-for="month" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>

        <div class="form-group col-sm-2">
            <div class="row">
                <label class="col-sm-12">@Wording.Year</label>
                <div class="col-sm-12">
                    <select class="form-control" name="year" id="year">
                        <option value="">- chọn -</option>
                        @for (int i = 2017; i <= DateTime.Now.Year; i++)
                        {
                            <option @(Request["year"] == i + "" ? "selected" : "") value="@i">@i</option>
                        }
                    </select>
                    <span class="field-validation-valid help-inline" data-valmsg-for="year" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>

        <div class="col-sm-2">
            <div class="row">
                <label class="col-sm-12" style="opacity:0;">button</label>
                <div class="col-sm-12">
                    <button onclick="return true;" class="btn btn-primary btn-sm">
                        @Wording.Search
                        <i class="ace-icon fa fa-search icon-on-right bigger-110"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}



<div class="row">
    <div class="col-xs-12">
        <div id="reportViewer1">
            loading...
        </div>
    </div>
</div>

<script src="http://cdn.kendostatic.com/2013.2.918/js/kendo.web.min.js"></script>
<!--kendo.mobile.min.js - optional, if gestures/touch support is required-->
<script src="http://cdn.kendostatic.com/2013.2.918/js/kendo.mobile.min.js"></script>
<script src="/ReportViewer/js/telerikReportViewer-9.0.15.225.min.js"></script>

<script type="text/javascript">
$(document).ready(function () {
    $("#reportViewer1")
        .telerik_ReportViewer({

            // The URL of the service which will serve reports.
            // The URL corresponds to the name of the controller class (ReportsController).
            // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
            serviceUrl: "/api/reports/",

            // The URL for the report viewer template. The template can be edited -
            // new functionalities can be added and unneeded ones can be removed.
            // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
            templateUrl: '/ReportViewer/templates/telerikReportViewerTemplate-9.0.15.225.html',

            //ReportSource - report description
            reportSource: {

                // The report can be set to a report file name (trdx report definition)
                // or CLR type name (report class definition).
                report: "Erp.BackOffice.Areas.Sale.Views.SaleReport.Design.ReceiptList, Erp.BackOffice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", //'/Reports/SampleReport.trdx', //

                // Parameters name value dictionary
                parameters: {
                    branchName : '@Html.Raw(branchName)',
                    branchId : @(string.IsNullOrEmpty(branchId) == false ? branchId : "0"),
                    month: @(string.IsNullOrEmpty(Request["month"]) == false ? Request["month"] : "0"),
                    year: @(string.IsNullOrEmpty(Request["year"]) == false ? Request["year"] : "0"),
                }
            },

            // Specifies whether the viewer is in interactive or print preview mode.
            // PRINT_PREVIEW - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            // INTERACTIVE - Displays the report in its original width and height without paging. Additionally interactivity is enabled.
            viewMode: telerikReportViewer.ViewModes.PRINT_PREVIEW,

            // Sets the scale mode of the viewer.
            // Three modes exist currently:
            // FIT_PAGE - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            // FIT_PAGE_WIDTH - The report will be zoomed in or out so that the width of the screen and the width of the report match.
            // SPECIFIC - Uses the scale to zoom in and out the report.
            scaleMode: telerikReportViewer.ScaleModes.SPECIFIC,

            // Zoom in and out the report using the scale
            // 1.0 is equal to 100%, i.e. the original size of the report
            scale: 1.0,

            ready: function () {
                //this.refreshReport();
            },
        });
});
</script>

