@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model ProductInboundViewModel

@{
    ViewBag.Title = Wording.PageView_ProductInBound;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "ProductInBound",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    IEnumerable<SelectListItem> warehouseList = (IEnumerable<SelectListItem>)ViewBag.warehouseList;
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

<style>
    .lighter.block.green {
        display: none !important;
    }
</style>
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "ProductInBound", null, FormMethod.Post, new {id="EditProductInbound", @class = "form-horizontal clearfix" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.IsArchive)
    @Html.HiddenFor(model => model.BranchId)
    @Html.HiddenFor(model => model.WarehouseDestinationId)
    @Html.HiddenFor(model => model.WarehouseSourceId)
    @*@Html.HiddenFor(model => model.WarehouseKeeperId)*@
    <div class="row">
        <div class="col-sm-7">
            <div id="listOrderDetail" class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên sản phẩm</th>
                            <th>Lô/Hạn SD</th>
                            <th>SL</th>
                            <th>Đơn giá</th>
                            <th>Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody id="detailList" class="detailList">
                        @for (int i = 0; i < Model.DetailList.Count; i++)
                        {
                            <tr role="0" data-id="@i">
                                <td>@(i + 1)</td>
                                <td class="detail_item_id">
                                    @Html.Hidden("DetailList[" + i + "].ProductId", Model.DetailList[i].ProductId)
                                    <input type="hidden" name="DetailList[@i].QuantityUsed" value="@Model.DetailList[i].QuantityUsed" class="detail_item_qtyUsed" />
                                    @Html.Hidden("DetailList[" + i + "].Id", Model.DetailList[i].Id)
                                    @Html.Hidden("DetailList[" + i + "].ProductCode", Model.DetailList[i].ProductCode)
                                    <span>@Model.DetailList[i].ProductCode - @Model.DetailList[i].ProductName</span>
                                </td>
                                <td>
                                    @Html.TextBox("DetailList[" + i + "].LoCode", Model.DetailList[i].LoCode, new { @style = "width:100px;" })
                                
                                    <input class="form-control input-mask-date" type="text" id="DetailList_@(i)__ExpiryDate" name="DetailList[@i].ExpiryDate" value="@Model.DetailList[i].ExpiryDate" style=" width:100px;">
                                </td>
                                <td class="has-error">
                                    <input type="hidden" name="DetailList[@i].Unit" value="" class="detail_item_unit" />
                                    <input style="width:50px" type="text" min="0" value="@Model.DetailList[i].Quantity" name="DetailList[@i].Quantity" id="DetailList_@(i)__Quantity" class="detail_item_qty numberinput1" />
                                    <span class="field-validation-valid help-inline" data-valmsg-for="DetailList_@(i)__Quantity" data-valmsg-replace="true"></span>
                                </td>
                                <td class="has-error detail-product-price">
                                    <input class="numberinput2 detail_item_price" type="text" id="DetailList_@(i)__Price" name="DetailList[@i].Price" value="@Model.DetailList[i].Price" role="price" style="width:100px" data-val="true" data-val-required="Chưa nhập giá" />
                                    <span class="field-validation-valid help-inline" data-valmsg-for="DetailList[@i]_Price" data-valmsg-replace="false"></span>
                                </td>
                                <td class="detail_item_total">@Erp.BackOffice.Helpers.Common.PhanCachHangNgan2(Model.DetailList[i].Price * Model.DetailList[i].Quantity)</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3"></td>
                            <td id="TongSoLuong" align="right" style="font-weight:bold"></td>
                            <td></td>
                            <td id="TongThanhTien" align="right" style="font-weight:bold"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="col-sm-5">
            <ul class="nav nav-tabs" id="myTab">
                <li id="li-tab1" class="active"><a data-target="#tab1" data-toggle="tab" aria-expanded="true">Thông tin chi tiết</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active clearfix" id="tab1">
                    <div class="detail-view col-xs-12">
                      
                        <div class="row control-group">
                            @Html.DetailViewItemFor2(model => model.Code, null, null, "col-xs-4", "col-xs-8")
                        </div>
                        <div class="row control-group">
                            @Html.DetailViewItemFor2(model => model.WarehouseDestinationName, null, null, "col-xs-4", "col-xs-8")
                        </div>
                        <div class="row control-group">
                            @Html.DetailViewItemFor2(model => model.CreatedDate, null, null, "col-xs-4", "col-xs-8")
                        </div>
                    </div>
                    @Html.CustomTextboxFor(model => model.TotalAmount, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 numberinput2" }, { "disabled", "disabled" } })
                    @*@Html.ModulePopupFor(m => m.CreatedStaffId, "Staffs", Model.CreatedStaffName, false, false, false, null, null, "Search")*@
                    @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12, true, null, "hide", "full-w")
                 
                </div>
            </div>
        </div>
    </div>
    using (Html.BeginButtonContainer(pageSetting))
    {
        <a class="btn btn-mini btn-primary" id="Save" name="Save" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </a>
    }
}
@section Scripts {

    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()

    <script>
        $(document).ready(function () {
            LoadNumberInput();
            //$('.detail_item_price').numberFormat('before');
          //  $('.detail_item_qty').numberFormat();
            $.mask.definitions['~'] = '[+-]';
            $('.input-mask-date').mask('99/99/9999');
            // tính thành tiền và tổng cộng
            $('#detailList').on('change', '.detail_item_qty', function () {
                $(this).val($(this).val().replace(/\-/g, ''));
                $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
                var ralVal = numeral($(this).val());
                if (ralVal <= 0) {
                    $(this).val(1);
                }
                var $this = $(this);
                var id = $this.closest('tr').data('id');
                var $detail_item_id = $this.closest('tr').find('.detail_item_id');
                var $qty = $detail_item_id.closest('tr').find('.detail_item_qty');
                var qty = 1;
                if ($qty.val() == '') {
                    $qty.val(1);
                } else {
                    qty = parseInt($qty.val()) < 0 ? parseInt($qty.val()) * -1 : parseInt($qty.val());
                }
                var $qtyUsed = $detail_item_id.closest('tr').find('.detail_item_qtyUsed');
                var qtyUsed = 1;
                if ($qtyUsed.val() == '') {
                    $qtyUsed.val(0);
                } else {
                    qtyUsed = parseInt($qtyUsed.val()) < 0 ? parseInt($qtyUsed.val()) * -1 : parseInt($qtyUsed.val());
                }
                if (qty < qtyUsed) {
                    $qty.val(qtyUsed);
                }
                else
                {
                    $qty.val(qty);
                }
                calcAmountItem($detail_item_id,id, 'price');
                calcTotalAmount();

            });
            $('#detailList').on('change', '.detail-product-price .detail_item_price:last-of-type', function () {
                var $this = $(this);
                var id = $this.closest('tr').data('id');
                var $detail_item_id = $this.closest('tr').find('.detail_item_id');
                calcAmountItem($detail_item_id,id, 'price');
                calcTotalAmount();
            });
            calcTotalAmount();

            $('#detailList').on('focus', '.detail_item_qty', function () {
                $(this).select();
            });

            $('#detailList').on('keypress', '.detail_item_qty', function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                }
            });
            $('#detailList').on('change', '.detail-product-price .detail_item_price:not(.mask-format-currency)', function () {
                $(this).val($(this).val().replace(/\-/g, ''));
                $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
                var ralVal = numeral($(this).val());
                if (ralVal <= 0) {
                    $(this).val(1);
                }
                var $this = $(this);
                var id = $this.closest('tr').data('id');
                var $detail_item_id = $this.closest('tr').find('.detail_item_id');
                calcAmountItem($detail_item_id, id, 'price');
                calcTotalAmount();
                
            });
        });
        function calcAmountItem($detail_item_id,id, priceFrom) {
            //var price = 0;
            //var $priceElem = $detail_item_id.closest('tr').find('.detail_item_price');
            //if (priceFrom == 'item select') {
            //    $priceElem.val($option.data('price')).trigger('change');
            //    price = parseFloat($option.data('price'));
            //} else {
            //    price = parseFloat($priceElem.last().val().replace(/[^0-9\.]/g, ''));
            //}
            var input_price = $('#DetailList_' + id + '__Price');
            var _price = input_price.val() != '' ? removeComma(input_price.val()) : 0;

            var $qty = $detail_item_id.closest('tr').find('.detail_item_qty');
            var qty = 1;
            if ($qty.val() == '') {
                $qty.val(1);
            } else {
                qty = parseInt($qty.val()) < 0 ? parseInt($qty.val()) * -1 : parseInt($qty.val());
            }
            var total = parseFloat(_price) * qty;
            $detail_item_id.closest('tr').find('.detail_item_total').text(numeral(total).format('0,0'));
        };

        function calcTotalAmount() {
            var total = 0;
            var total1 = 0;
            $('#detailList tr').each(function (index, elem) {
                if ($(elem).find('.detail_item_total').text() != '') { // la số thì mới tính
                    total += parseFloat(removeComma($(elem).find('.detail_item_total').text()));
                    $('#TongThanhTien').text(numeral(total).format('0,0'));
                    $('#TotalAmount').val(numeral(total).format('0,0'));
                   // console.log(total);
                }
            });
           
            $('#detailList tr').each(function (index, elem) {
            if ($(elem).find('.detail_item_qty').val() != '') { // la số thì mới tính
                total1 += parseInt($(elem).find('.detail_item_qty').val().replace(/\./g, ''));
              
                $('#TongSoLuong').text(currencyFormat(total1));
            }
            });
        };
        //function Kiemtra(Id, $detail_item_id) {
        //    var quantity = parseInt($detail_item_id.closest('tr').find('.detail_item_qty').val().replace(/\./g, ''));
        //    //DetailList[" + i + "].ProductId
        //    $.ajax({
        //        url: '/ProductInbound/CheckQuantity',
        //        type: 'GET',
        //        data: { Id: Id, quantity: quantity },
        //        success: function (res) {
        //            if (res == "success") {
        //                return;
        //            } else {
        //                $detail_item_id.closest('tr').find('.detail_item_qty').val(currencyFormat(res));
        //            }
        //        }
        //    });

        //};
        $('#Save').click(function () {
            ShowLoading();
            ClearFormatBeforeSubmit($("#EditProductInbound"));
            $("#EditProductInbound").submit();
          //  HideLoading();

            //return false;
        });

    </script>
}
