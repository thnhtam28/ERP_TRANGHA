@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models
@using Erp.Domain.Sale.Entities

@model MaterialViewModel

@{
    ViewBag.Title = Wording.PageEdit_Material;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Material",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
    List<Supplier> supplier_List=(List<Supplier>)ViewBag.supplierList;
    IEnumerable<SelectListItem> ManufacturerList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("manufacturerList", null, "value");
    IEnumerable<SelectListItem> CategoryList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("product", null, "value");
    IEnumerable<SelectListItem> productUnitList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("productUnit", null, "value");
    IEnumerable<SelectListItem> productGroupList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("ProductGroup", null, "value");
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

<div class="text-danger">@ViewBag.errors</div>
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "Material", null, FormMethod.Post, new { id = "EditMaterial", @class = "form-horizontal clearfix", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <input type="hidden" name="IsPopup" value="@Request["IsPopup"]" />
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.Image_Name)
    <div class="row">
        <div class="col-sm-12">
            <div class="widget-container-col ui-sortable" id="widget-container-col-10" style="min-height: 108px;">
                <div class="widget-box ui-sortable-handle" id="widget-box-10" style="opacity: 1;">
                    <div class="widget-header widget-header-small">
                        <div class="widget-toolbar no-border pull-left">
                            <ul class="nav nav-tabs" id="myTab">
                                <li class="active">
                                    <a data-toggle="tab" href="#home" aria-expanded="true"><i class="fa fa-info-circle"></i> Tổng quan</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" href="#image" aria-expanded="false"><i class="fa fa-image"></i> Ảnh minh họa</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" href="#profile" aria-expanded="false"><i class="fa fa-comment-o"></i> Mô tả</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main padding-6">
                            <div class="tab-content">
                                <div id="home" class="tab-pane active">
                                    @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
                                    @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12)
                                    @Html.CustomDropDownListFor(model => model.Manufacturer, ManufacturerList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                                    @Html.CustomDropDownListFor(model => model.CategoryCode, CategoryList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomDropDownListFor(model => model.ProductGroup, productGroupList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomDropDownListFor(model => model.Unit, productUnitList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomTextboxFor(model => model.Size, null, null, WidthType.span12)
                                    <div id="" class="control-group form-group">
                                        <label class="control-label col-lg-5 col-md-4 col-sm-4">Giá nhập</label>
                                        <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                            <div class="clearfix">
                                                <input class="numberinput2 col-sm-12 text-right" id="PriceInbound" name="PriceInbound" type="text" value="@Model.PriceInbound">
                                            </div>
                                        </div>
                                    </div>
                                    <div id="" class="control-group form-group">
                                        <label class="control-label col-lg-5 col-md-4 col-sm-4">Giá xuất</label>
                                        <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                            <div class="clearfix">
                                                <input class="numberinput2 col-sm-12 text-right" id="PriceOutbound" name="PriceOutbound" type="text" value="@Model.PriceOutbound">
                                            </div>
                                        </div>
                                    </div>
                                    @Html.CustomTextboxFor(model => model.MinInventory, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 text-right numberinput2" } })

                                </div>
                                <div id="image" class="tab-pane">
                                    <div class="wrap-btn-upload">
                                        <a class="btn btn-primary btn-sm"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                                        <input type="file" id="file-image" name="file-image" class="file-image" accept="image/*" onchange="previewFileImage(event, '#display-image img')" />
                                    </div>
                                    <div class="text-center" id="display-image">
                                        <img src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image_Name, "Material", "product"))" title="@Model.Name" id="imgAvt" style="max-height:250px" />
                                    </div>
                                </div>
                                <div id="profile" class="tab-pane">
                                    <textarea class="ckeditor" cols="20" id="Description" name="Description" placeholder="" rows="2">@Model.Description</textarea>

                                    <div id="group-supplier" class="control-group form-group top-20">
                                        <label class="col-sm-12">Được cung cấp bởi:</label>
                                        <div class="col-sm-12">
                                            @if (supplier_List.Count() > 0)
                                            {
                                                foreach (var item in supplier_List)
                                                {
                                                    <a class="label label-info" href="@Url.Action("Edit","Supplier", new { id = item.Id })">@item.Name</a>
                                                }
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    using (Html.BeginButtonContainer(pageSetting))
    {
        <a class="btn btn-mini btn-primary" id="Save" name="Save" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </a>
    }
}

@section Scripts {
    <link href="/Scripts/ckeditor/contents.css" rel="stylesheet" />
    <script src="/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        $(document).ready(function () {
            LoadNumberInput();
          
            $('#Save').click(function () {
                ShowLoading();
                ClearFormatBeforeSubmit($("#EditMaterial"));
                $("#EditMaterial").submit();
               // HideLoading();
                //return false;
            });

            //init
            $('#CategoryCode').trigger('change');

            $("#Code").change(function () {
                $.get('/Material/CheckCodeExsist/' + $(this).val(), function (rs) {
                    if(rs != '')
                    {
                        alert(rs);
                    }
                });
            });
        });

        function initCkeditor() {
            $('.ckeditor').ckeditor({
                "extraPlugins": 'imagebrowser',
                "imageBrowser_listUrl": "@Url.Action("ListJson","Images")",
                // Define the toolbar groups as it is a more accessible solution.
                toolbarGroups: [
                    { "name": "document", "groups": ["mode", "document", "doctools"] },
                    { "name": "editing", "groups": ["find", "selection", "spellchecker"] },
                    { "name": "forms" },
                    { "name": "tools" },
                    { "name": "basicstyles", "groups": ["basicstyles", "cleanup"] },
                    { "name": "clipboard", "groups": ["clipboar", "undo"] },
                    { "name": "links", "groups": ["links"] },
                    { "name": "paragraph", "groups": ["list", "blocks"] },
                    { "name": "insert", "groups": ["insert"] },
                    { "name": "styles", "groups": ["styles"] },
                    //{ "name": "about", "groups": ["about"] },
                    { "name": "styles" },
                    { "name": "colors" },
                    { "name": "align", "groups": ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] }

                ],
                // Remove the redundant buttons from toolbar groups defined above.
                removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar'
            });
        }
        //upload file image
        $(document).ready(function () {
            $('[type="file"]').change(function () {
                var fileInput = $(this);
                if (fileInput.length && fileInput[0].files && fileInput[0].files.length) {
                    var url = window.URL || window.webkitURL;
                    var image = new Image();
                    image.onerror = function () {
                        alert("File tải lên bắt buộc phải là hình ảnh (.png, .jpg, .jpeg,...)");
                        $("#imgAvt").attr("src", "@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image_Name, "Material", "product"))");
                    };
                    image.src = url.createObjectURL(fileInput[0].files[0]);
                }
            });
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
}
