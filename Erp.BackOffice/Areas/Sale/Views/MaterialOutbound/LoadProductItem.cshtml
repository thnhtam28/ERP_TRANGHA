@model Erp.BackOffice.Sale.Models.MaterialOutboundDetailViewModel
@using Erp.BackOffice.Helpers
@{  

    var thanh_tien = Model.Price * Model.Quantity;
}
<tr class="detail_item" role="@(Model.OrderNo)" id="product_item_@Model.OrderNo" data-id="@Model.OrderNo">
    <td class="text-center">
        <span>@(Model.OrderNo + 1)</span>
    </td>
    <td class="has-error detail_item_id">
        @Html.Hidden("DetailList[" + Model.OrderNo + "].MaterialId", Model.MaterialId)
        @Model.MaterialCode - @Model.MaterialName
    </td>
    <td class="detail-locode">
        @Html.TextBox("DetailList[" + Model.OrderNo + "].LoCode", Model.LoCode, new { @style = "width:100px;", @readonly = "readonly" })
        <input class="form-control input-mask-date" type="text" id="DetailList_@(Model.OrderNo)__ExpiryDate" name="DetailList[@Model.OrderNo].ExpiryDate" value="@(Model.ExpiryDate==null?"":Model.ExpiryDate.Value.ToString("dd/MM/yyyy"))" style="width:100px;" readonly="readonly">
    </td>
    <td class="has-error">
        <input type="hidden" name="DetailList[@(Model.OrderNo)].Unit" value="" class="detail_item_unit" />
        @Html.TextBox("DetailList[" + Model.OrderNo + "].Quantity", Model.Quantity, new { style = "width:50px", @class = "detail_item_qty numberinput1", autocomplete = "off", data_quantity_inventory = Model.QuantityInInventory })
    </td>
    <td class="has-error detail-product-price">
        <input class="detail_item_price numberinput2" type="text" id="DetailList_@(Model.OrderNo)__Price" name="DetailList[@(Model.OrderNo)].Price" value="@Model.Price" role="price" style="width:100%" data-val="true" data-val-required="Chưa nhập giá" autocomplete="off" />
    </td>
    <td class="detail_item_total">@thanh_tien.ToCurrencyStr(null)</td>
    <td class="text-center">
        <a class="btn-delete-item">
            <i class="ace-icon fa fa-trash red bigger-120" style="cursor:pointer"></i>
        </a>
    </td>
</tr>