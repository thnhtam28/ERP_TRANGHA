@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model AdviseCardViewModel

@{
    ViewBag.Title = Wording.PageEdit_AdviseCard;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "AdviseCard",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.AssignedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.IsActived)
    @Html.HiddenFor(model => model.Type)
    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
    @Html.CustomDropDownListFor(model => model.BranchId, Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_Branch(Model.BranchId, null), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleChosen)
    @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12, true, new Dictionary<string, object> { { "readonly", "readonly" } })
    @Html.ModulePopupFor(m => m.CustomerId, "Customer", Model.CustomerName, false, true)
    @*@Html.ModulePopupFor(m => m.CreateStaffId, "Staffs", Model.CreateStaffName, false, false, false, null, null, "Search")*@
    @*@Html.ModulePopupFor(m => m.CounselorId, "Staffs", Model.CounselorName, false, false, false, null, null, "Search")*@
    @Html.CustomDropDownListFor(model => model.CounselorId, Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_User(Model.CounselorId, Wording.Empty), WidthType.span4, true, null, DropdownListStyle.DropdownListStyleChosen)
    @Html.CustomTextAreaFor(model => model.Note, null, WidthType.span12, true, null)
    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
}
