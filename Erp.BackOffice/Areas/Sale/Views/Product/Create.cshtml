@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model ProductViewModel

@{
    ViewBag.Title = Wording.PageCreate_Product;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Product",
        ActionName = "Create",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };

    IEnumerable<SelectListItem> ManufacturerList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("manufacturerList", null, "value");
    IEnumerable<SelectListItem> CategoryList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("product", null, "value");
    IEnumerable<SelectListItem> productUnitList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("productUnit", null, "value");
    IEnumerable<SelectListItem> productGroupList = Erp.BackOffice.Helpers.Common.GetSelectList_Category("ProductGroup", null, "value");
    IEnumerable<SelectListItem> ProductLinkIdList = Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_Product("product", null, Wording.Empty);
    IEnumerable<SelectListItem> OriginList = Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_Category("Origin", null, Wording.Empty);
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Create", "Product", null, FormMethod.Post, new { id = "CreateProduct", @class = "form-horizontal clearfix", enctype = "multipart/form-data" }))
{
    //@Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" name="IsPopup" value="@Request["IsPopup"]" />
    <input type="hidden" name="Type" value="product" />

    <div class="row">
        <div class="col-sm-12">
            <div class="widget-container-col ui-sortable" id="widget-container-col-10" style="min-height: 108px;">
                <div class="widget-box ui-sortable-handle" id="widget-box-10" style="opacity: 1;">
                    <div class="widget-header widget-header-small">
                        <div class="widget-toolbar no-border pull-left">
                            <ul class="nav nav-tabs" id="myTab">
                                <li class="active">
                                    <a data-toggle="tab" href="#home" aria-expanded="true"><i class="fa fa-info-circle"></i> Tổng quan</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" href="#image" aria-expanded="false"><i class="fa fa-image"></i> Ảnh minh họa</a>
                                </li>
                                <li class="">
                                    <a data-toggle="tab" href="#profile" aria-expanded="false"><i class="fa fa-comment-o"></i> Mô tả</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main padding-6">
                            <div class="tab-content">
                                <div id="home" class="tab-pane active">
                                    @Html.CustomTextboxFor(model => model.Name, null, null, WidthType.span12)
                                    @Html.CustomTextboxFor(model => model.Code, null, null, WidthType.span12)
                                    @Html.CustomDropDownListFor(model => model.Origin, OriginList.Where(x => x.Value == "ORLANE PARIS" || x.Value == "LEONOR GREYL" || x.Value == "ANNAYAKE"), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                                    @Html.CustomDropDownListFor(model => model.Manufacturer, ManufacturerList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                                    @Html.CustomDropDownListFor(model => model.CategoryCode, CategoryList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomDropDownListFor(model => model.ProductGroup, productGroupList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomDropDownListFor(model => model.Unit, productUnitList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                                    @Html.CustomDropDownListFor(model => model.ProductLinkId, ProductLinkIdList, WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                                    @Html.CustomTextboxFor(model => model.Size, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 text-right" } })
                                    <div id="" class="control-group form-group">
                                        <label class="control-label col-lg-5 col-md-4 col-sm-4">Giá nhập</label>
                                        <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                            <div class="clearfix">
                                                <input class="numberinput2 col-sm-12 text-right" id="PriceInbound" name="PriceInbound" type="text" value="@Model.PriceInbound">
                                            </div>
                                        </div>
                                    </div>
                                    <div id="" class="control-group form-group">
                                        <label class="control-label col-lg-5 col-md-4 col-sm-4">Giá xuất</label>
                                        <div class="control-value col-lg-7 col-md-8 col-sm-8">
                                            <div class="clearfix">
                                                <input class="numberinput2 col-sm-12 text-right" id="PriceOutbound" name="PriceOutbound" type="text" value="@Model.PriceOutbound">
                                            </div>
                                        </div>
                                    </div>
                                    @Html.CustomTextboxFor(model => model.MinInventory, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 text-right" } })
                                    @Html.CustomTextboxFor(model => model.QuantityDayUsed, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 text-right" } })
                                    @Html.CustomTextboxFor(model => model.QuantityDayNotify, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-sm-12 text-right" } })
                              
                                </div>
                                <div id="image" class="tab-pane">
                                    <div class="wrap-btn-upload">
                                        <a class="btn btn-primary btn-sm btn-white"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                                        <input type="file" id="file-image" name="file-image" class="file-image" accept="image/*" onchange="previewFileImage(event, '#display-image img')" />
                                    </div>
                                    <div class="text-center" id="display-image">
                                        <img src="/assets/css/images/noimage.gif" title="@Model.Name" id="imgAvt" style="max-height:250px" />
                                    </div>
                                </div>
                                <div id="profile" class="tab-pane">
                                    <textarea class="ckeditor" cols="20" id="Description" name="Description" placeholder="" rows="2">@Model.Description</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    using (Html.BeginButtonContainer(pageSetting))
    {
        <a class="btn btn-mini btn-primary" id="Save" name="Save" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </a>
    }

}

@section Scripts {
    <link href="/Scripts/ckeditor/contents.css" rel="stylesheet" />
    <script src="/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        //upload file image
        $(document).ready(function () {
            $('[type="file"]').change(function () {
                var fileInput = $(this);
                if (fileInput.length && fileInput[0].files && fileInput[0].files.length) {
                    var url = window.URL || window.webkitURL;
                    var image = new Image();
                    image.onerror = function () {
                        alert("File tải lên bắt buộc phải là hình ảnh (.png, .jpg, .jpeg,...)");
                        $("#imgAvt").attr("src", "/assets/css/images/noimage.gif");
                    };
                    image.src = url.createObjectURL(fileInput[0].files[0]);
                }
            });
        });
        $(document).ready(function () {
            LoadNumberInput();
            $("#IsMoneyDiscount").on('change', function () {
                if ($("#IsMoneyDiscount").is(':checked')) {
                    $("#IsMoneyDiscount").val("true");
                    $("#lb_IsCheck").text("VNĐ");
                }
                else {
                    $("#IsMoneyDiscount").val("false");
                    $("#lb_IsCheck").text("%");
                }
            });
            //   $('#PriceInbound').priceFormat();
            $('#MinInventory, #QuantityService').numberFormat();

            $('#CategoryCode').change(function () {
                var $this = $(this);
                $('.list-attr-by-category').html('');
                $.get('/ObjectAttribute/GetListByModuleCategory', { category: $this.val() }, function (res) {
                    if (res.replace(/\s+/, '') != '') {
                        $('.list-attr-by-category').html(res);
                        initDataTypeInput($('.list-attr-by-category input'));
                        $('.box-attr').show();
                    }
                });
            });

            resetLableRequired('#CreateProduct');
            //parseValidatorForm('#ProductInBound');

            $("#Code").change(function () {
            $.get('/Product/CheckCodeExsist/', { id: @Model.Id, code: $(this).val() }, function (rs) {
                if (rs != '') {
                    alert(rs);
                    return false;
                }
            });
        });

            $('#Save').click(function () {
                ShowLoading();
                    $.get('/Product/CheckCodeExsist/', { id: @Model.Id, code: $("#Code").val() }, function (rs) {
                        if (rs != '') {
                            alert(rs);
                            HideLoading();
                        }
                        else
                        {
                            ClearFormatBeforeSubmit($("#CreateProduct"));
                            $("#CreateProduct").submit();
                         }
                    });
            });



        });

        function initCkeditor() {
            $('.ckeditor').ckeditor({
                "extraPlugins": 'imagebrowser',
                "imageBrowser_listUrl": "@Url.Action("ListJson","Images")",
                // Define the toolbar groups as it is a more accessible solution.
                toolbarGroups: [
                    { "name": "document", "groups": ["mode", "document", "doctools"] },
                    { "name": "editing", "groups": ["find", "selection", "spellchecker"] },
                    { "name": "forms" },
                    { "name": "tools" },
                    { "name": "basicstyles", "groups": ["basicstyles", "cleanup"] },
                    { "name": "clipboard", "groups": ["clipboar", "undo"] },
                    { "name": "links", "groups": ["links"] },
                    { "name": "paragraph", "groups": ["list", "blocks"] },
                    { "name": "insert", "groups": ["insert"] },
                    { "name": "styles", "groups": ["styles"] },
                    //{ "name": "about", "groups": ["about"] },
                    { "name": "styles" },
                    { "name": "colors" },
                    { "name": "align", "groups": ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] }

                ],
                // Remove the redundant buttons from toolbar groups defined above.
                removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar'
            });
        }

        var $tr_template = $('#detailList tr:first-child');
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Name</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                window.parent.ClosePopupAndAppendSelect(option);
            }

        });
        $('#QuantityDayUsed').change(function () {
            $(this).val($(this).val().replace(/\-/g, ''));
            $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
            var ralVal = numeral($(this).val());
            if (ralVal < 0 ) {
                $(this).val("");
            }
        });
        $('#QuantityDayNotify').change(function () {
            $(this).val($(this).val().replace(/\-/g, ''));
            $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
            var ralVal = numeral($(this).val());
            if (ralVal < 0 ) {
                $(this).val("");
            }
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
}
