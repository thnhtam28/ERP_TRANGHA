@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Sale.Models

@model LoyaltyPointViewModel

@{
    ViewBag.Title = Wording.PageEdit_LoyaltyPoint;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {        
        ModuleName = "LoyaltyPoint",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = true
    };
}

@section HeadOfPage {
    @Html.ScriptTop_ChosenStyle()
}

@using(Html.BeginPageHeaderContainer(pageSetting))
{

}

@using (Html.BeginForm_AceStyle((string)ViewBag.Title, pageSetting.ActionName, pageSetting.ModuleName, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.AssignedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.Name)
    @Html.CustomTextboxFor(model => model.MinMoney, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-xs-12" } })
    @Html.CustomTextboxFor(model => model.MaxMoney, null, null, WidthType.span12, true, new Dictionary<string, object> { { "class", "col-xs-12" } })
    @Html.CustomTextboxFor(model => model.PlusPoint, null, null, WidthType.span12)


    using (Html.BeginButtonContainer(pageSetting))
    {
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    <script>
        $("button[name='Submit']").click(function (e) {
            debugger
            var min = document.getElementById("MinMoney").value;
            var max = document.getElementById("MaxMoney").value;
            if (min > max) {
                alert("Doanh thu tối đa phải lớn hơn doanh thu tối thiểu!!!");
                return false;
            }
        });
        $('#MinMoney').change(function () {
            $(this).val($(this).val().replace(/\-/g, ''));
            $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
            var ralVal = numeral($(this).val());
            if (ralVal <= 0) {
                $(this).val(0);
            }
        });
        $('#MaxMoney').change(function () {
            $(this).val($(this).val().replace(/\-/g, ''));
            $(this).val($(this).val().replace(/[^0-9.,]/g, ''));
            var ralVal = numeral($(this).val());
            if (ralVal <= 0) {
                $(this).val(0);
            }
        });
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
}
